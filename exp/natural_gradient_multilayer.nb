(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    158418,       3580]
NotebookOptionsPosition[    155921,       3489]
NotebookOutlinePosition[    156280,       3505]
CellTagsIndexPosition[    156237,       3502]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Natural gradient for multilayer linear nets", "Title",
 CellChangeTimes->{{3.699982030861434*^9, 3.699982042951764*^9}}],

Cell[CellGroupData[{

Cell["Util", "Section",
 CellChangeTimes->{{3.699993495651449*^9, 3.699993502401659*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Change", " ", "TensorProduct", " ", "to", " ", "act", " ", "like", " ", 
    "Kronecker", " ", "product"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Unprotect", "[", "TensorProduct", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TensorProduct", "=", "KroneckerProduct"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Protect", "[", "TensorProduct", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"On", "[", "Assert", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"column", " ", "vectorize"}], ",", " ", 
     RowBox[{"following", " ", "Magnus"}], ",", " ", "1999"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vectorize", "[", "W_", "]"}], ":=", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"Flatten", "@", 
        RowBox[{"Transpose", "[", "W", "]"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"unvectorize", "[", 
      RowBox[{"Wf_", ",", " ", "rows_"}], "]"}], ":=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Flatten", "/@", 
       RowBox[{"Partition", "[", 
        RowBox[{"Wf", ",", "rows"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"toscalar", "[", "v_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"Flatten", "@", "v"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"Length", "[", "t", "]"}], "\[Equal]", "1"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"First", "@", "t"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vec", "=", "vectorize"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"unvec", "=", "unvectorize"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v2c", "[", "c_", "]"}], ":=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", "c", "}"}], "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"turns", " ", "vector", " ", "to", " ", "column", " ", "matrix"}],
     " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2v", "[", "c_", "]"}], ":=", 
    RowBox[{"Flatten", "[", "c", "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "turns", " ", "column", " ", "matrix", " ", "into", " ", "vector"}], " ", 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Partitions", " ", "matrix", " ", "into", " ", "blocks", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"axa", ",", "axb"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"bxa", ",", "bxb"}], "}"}]}], "}"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"partitionMatrix", "[", 
      RowBox[{"mat_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Assert", "[", 
           RowBox[{
            RowBox[{"a", "+", "b"}], "\[Equal]", 
            RowBox[{"Length", "@", "mat"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "Assert", ";"}], "[", 
         RowBox[{
          RowBox[{"a", "+", "b"}], "\[Equal]", 
          RowBox[{
           RowBox[{"Length", "@", "mat"}], "\[Transpose]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Internal`PartitionRagged", "[", 
         RowBox[{"mat", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "b"}], "}"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Commutation", " ", "matrix", " ", "m"}], ",", "n"}], " ", 
    "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{"hide", " ", "intermediate", " ", "variables"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Kmat", "[", 
      RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"X", "=", 
         RowBox[{"Array", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"before", "=", 
         RowBox[{"Flatten", "@", 
          RowBox[{"vectorize", "@", "X"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"after", "=", 
         RowBox[{"Flatten", "@", 
          RowBox[{"vectorize", "@", 
           RowBox[{"Transpose", "[", "X", "]"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"positions", "=", 
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"First", "@", "#2"}], ",", 
              RowBox[{"First", "@", 
               RowBox[{"Flatten", "@", 
                RowBox[{"Position", "[", 
                 RowBox[{"before", ",", "#"}], "]"}]}]}]}], "}"}], "&"}], ",",
            "after"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"matrix", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "\[Rule]", "1"}], "&"}], "/@", "positions"}], 
          "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"take1", "[", "x_", "]"}], ":=", 
     RowBox[{"First", "@", 
      RowBox[{"Flatten", "@", "x"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"robustMin", "[", "x_", "]"}], ":=", 
     RowBox[{"Min", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Flatten", "@", "x"}], ",", 
        RowBox[{
         RowBox[{"#", ">", "1*^-10"}], "&"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Symmetric", " ", "square", " ", "root"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"symsqrt", "[", "m_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"U", ",", "S", ",", "W"}], "}"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"U", ",", "S", ",", "W"}], "}"}], "=", 
         RowBox[{"SingularValueDecomposition", "[", "m", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"U", ".", 
         RowBox[{"Sqrt", "[", "S", "]"}], ".", 
         RowBox[{"Transpose", "[", "W", "]"}]}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\n", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "divide", " ", "object", " ", "by", " ", "sum", " ", "of", " ", "its", 
     " ", "elements"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"normalize", "[", "x_", "]"}], ":=", 
     RowBox[{"x", "/", 
      RowBox[{"Total", "[", 
       RowBox[{"x", ",", " ", "10"}], "]"}]}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Random", " ", "uniform", " ", "vector", " ", "normalized", " ", "to", 
     " ", "1"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomD", "[", "f_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "temp", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", "f", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"temp", "/", 
         RowBox[{"Total", "[", "temp", "]"}]}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "centers", " ", "data", " ", "where", " ", "batch", " ", "dimension", " ",
      "is", " ", "1"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"centerData", "[", "X_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "Xc", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Xc", "=", 
         RowBox[{"Mean", "@", 
          RowBox[{"Transpose", "@", "X"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "-", "Xc"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", "X", "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"takes", " ", 
     RowBox[{"sizes", " ", "[", 
      RowBox[{"s1", ",", "s2", ",", ".."}], "]"}], " ", "partitions", " ", 
     "vec", " ", "into", " ", "those", " ", "sizes"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"listPartition", "[", 
      RowBox[{"list_", ",", "sizes_"}], "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "list"}], "\[Equal]", 
          RowBox[{"Total", "@", "sizes"}]}], ",", " ", 
         "\"\<can't partition\>\""}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"offsets", "=", 
        RowBox[{
         RowBox[{"{", "0", "}"}], "~", "Join", "~", 
         RowBox[{"FoldList", "[", 
          RowBox[{"Plus", ",", "sizes"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"offsetPairs", "=", 
        RowBox[{"Partition", "[", 
         RowBox[{"offsets", ",", "2", ",", "1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"list", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ";;", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
        "offsetPairs"}]}], "\[IndentingNewLine]", ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"listPartition", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], "]"}], ";"}], "\n", "\n", 
   
   RowBox[{"(*", " ", 
    RowBox[{"approximate", " ", "equality", " ", "testing"}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DotEqual", "[", 
      RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "a", "}"}], "]"}], "-", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "b", "}"}], "]"}]}], "]"}], "<", "1*^-10"}]}], 
    ";"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Things", " ", "more", " ", "specific", " ", "to", " ", "natural", " ", 
    "gradient", " ", "stuff"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"partitions", " ", "matrix", " ", "into", " ", "blocks"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"partitionMatrix2", "[", 
      RowBox[{"mat_", ",", "sizes_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Internal`PartitionRagged", "[", 
        RowBox[{"mat", ",", 
         RowBox[{"{", 
          RowBox[{"sizes", ",", "sizes"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"extracts", " ", "i"}], ",", 
     RowBox[{
      RowBox[{"j", "'"}], "th", " ", "block"}], ",", " ", 
     RowBox[{"taking", " ", "sizes", " ", "from", " ", "fsizes"}]}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"matrixBlock", "[", 
      RowBox[{"i_", ",", "j_", ",", "mat_"}], "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"msizes", "=", 
        RowBox[{"Times", "@@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Partition", "[", 
            RowBox[{"fs", ",", "2", ",", "1"}], "]"}], "//", "Rest"}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"partitionMatrix2", "[", 
         RowBox[{"mat", ",", "msizes"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
      ")"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"extracts", " ", 
     RowBox[{"i", "'"}], "th", " ", "block", " ", "from", " ", "vector"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"vectorBlock", "[", 
      RowBox[{"i_", ",", "vec_"}], "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"msizes", "=", 
        RowBox[{"Times", "@@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Partition", "[", 
            RowBox[{"fs", ",", "2", ",", "1"}], "]"}], "//", "Rest"}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"listPartition", "[", 
         RowBox[{"vec", ",", "msizes"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"magnitudeMat", "[", 
      RowBox[{"i_", ",", "j_", ",", "mat_"}], "]"}], ":=", 
     RowBox[{"Max", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"matrixBlock", "[", 
        RowBox[{"i", ",", "j", ",", "mat"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"magnitudeVec", "[", 
      RowBox[{"i_", ",", "vec_"}], "]"}], ":=", 
     RowBox[{"Max", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"vectorBlock", "[", 
        RowBox[{"i", ",", "vec"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"generateXY", "[", 
      RowBox[{"e_", ",", "yvar_", ",", "extraDims_", ",", "dsize_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "wt", ",", "mean", ",", "cov", ",", "normal", ",", "pdf", ",", "X", 
         ",", "Xc", ",", "Y", ",", "Xa", ",", "wta", ",", "w0a", ",", "XY", 
         ",", "n", ",", "trueCov"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SeedRandom", "[", "0", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"n", "=", "2"}], ";", "\[IndentingNewLine]", 
        RowBox[{"wt", "=", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], "}"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"true", " ", "relation"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"mean", "=", 
         RowBox[{
          RowBox[{"0", "&"}], "/@", 
          RowBox[{"Range", "@", "n"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cov", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", " ", 
             RowBox[{"1", "-", "e"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "-", "e"}], ",", "1"}], "}"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"normal", "=", 
         RowBox[{"MultinormalDistribution", "[", 
          RowBox[{"mean", ",", "cov"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"X", "=", 
         RowBox[{
          RowBox[{"RandomVariate", "[", 
           RowBox[{"normal", ",", 
            RowBox[{"{", "dsize", "}"}]}], "]"}], "//", "Transpose"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"X", "=", 
         RowBox[{"centerData", "[", "X", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"Y", "=", 
         RowBox[{
          RowBox[{"Dot", "[", 
           RowBox[{"wt", ",", " ", "X"}], "]"}], "+", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             SqrtBox["yvar"]}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"(*", " ", 
         RowBox[{
         "Add", " ", "copies", " ", "of", " ", "first", " ", "feature", " ", 
          "as", " ", "redundant", " ", "features"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Xa", "=", " ", 
         RowBox[{"X", "~", "Join", "~", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"X", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "All"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "extraDims"}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"wta", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"wt", ",", 
           RowBox[{"{", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "extraDims"}], "}"}]}], "]"}], "}"}], ",", 
           " ", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"w0a", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "extraDims"}], "}"}]}], "]"}], "}"}], ",", 
           " ", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Xa", ",", "Y", ",", "w0a"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X", ",", "Y", ",", "w0"}], "}"}], "=", 
     RowBox[{"generateXY", "[", 
      RowBox[{"0.01", ",", "1.", ",", "0", ",", "1000"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Transpose", "@", "X"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.699983677861176*^9, 3.699983678129451*^9}, {
  3.700056851696927*^9, 3.700056861911076*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
4TB0GoOdew34RLoG4X/CK9q8
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.9575863709015704`, 4.523258232447321}, {-3.122459392694004, 
   4.487564878392333}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.699983678554882*^9, 3.699986006110312*^9, 
  3.69999573792705*^9, 3.699996313218767*^9, 3.700056862675859*^9, 
  3.7002291226556253`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Main", "Section",
 CellChangeTimes->{{3.699993508701356*^9, 3.699993514326229*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Notation", ":", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"error", " ", "is", " ", "Y"}], "-", 
        RowBox[{"W", "[", "n", "]"}]}], "..."}], ".", 
      RowBox[{"W", "[", "1", "]"}], ".", 
      RowBox[{"W", "[", "0", "]"}]}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Y", "-", 
         RowBox[{"W", "[", "n", "]"}]}], "..."}], ".."}], 
      RowBox[{
       RowBox[{"W", "[", "1", "]"}], ".", "X"}], "\[IndentingNewLine]", "Wi", 
      " ", "has", " ", "size", " ", 
      RowBox[{"f", "[", "i", "]"}], " ", "x", " ", 
      RowBox[{"f", "[", 
       RowBox[{"i", "-", "1"}], "]"}], "\[IndentingNewLine]", "Y", " ", "has",
       " ", "size", " ", 
      RowBox[{"f", "[", "n", "]"}], " ", "x", " ", 
      RowBox[{"f", "[", 
       RowBox[{"-", "1"}], "]"}], "\[IndentingNewLine]", "X", " ", "has", " ",
       "size", " ", 
      RowBox[{"f", "[", "0", "]"}], " ", "x", " ", 
      RowBox[{"f", "[", 
       RowBox[{"-", "1"}], "]"}], "\[IndentingNewLine]", "fs"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"-", "1"}], "]"}], ",", 
       RowBox[{"f", "[", "0", "]"}], ",", 
       RowBox[{"f", "[", "1", "]"}], ",", "...", ",", 
       RowBox[{"f", "[", "n", "]"}]}], "}"}]}]}], "\[IndentingNewLine]", " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "A", ",", "B", ",", "dW", ",", "W", ",", "X", ",", "Y", ",", "y", ",", 
      "x", ",", "fs", ",", " ", "subW", ",", "loss"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Ws", " ", "gives", " ", "list", " ", "of", " ", "matrices"}], 
     ",", " ", 
     RowBox[{"Wf", " ", "means", " ", "flattened", " ", "representation"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Wf", " ", "gives", " ", "list", " ", "of", " ", "symbolic", " ", 
      "variables"}], ",", " ", 
     RowBox[{"W0f", " ", "gives", " ", "concrete", " ", "values"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"On", "[", "Assert", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SeedRandom", "[", "0", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fs", "=", 
     RowBox[{"{", 
      RowBox[{"10", ",", "2", ",", "2", ",", "2", ",", "1"}], "}"}]}], " ", 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dsize", "=", 
     RowBox[{"First", "[", "fs", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "number", " ", "of", " ", "layers", " ", "aka", " ", "number", " ", "of", 
     " ", "matmuls"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", 
     RowBox[{
      RowBox[{"Length", "[", "fs", "]"}], "-", "2"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dsize", "=", 
     RowBox[{"First", "@", "fs"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"makeW", "[", "0", "]"}], " ", "is", " ", "X"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"makeW", "[", "k_", "]"}], ":=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{"W", "[", "k", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"fs", "[", 
          RowBox[{"[", 
           RowBox[{"k", "+", "2"}], "]"}], "]"}], ",", 
         RowBox[{"fs", "[", 
          RowBox[{"[", 
           RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"makeInitializer", "[", "k_", "]"}], ":=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"fs", "[", 
          RowBox[{"[", 
           RowBox[{"k", "+", "2"}], "]"}], "]"}], ",", 
         RowBox[{"fs", "[", 
          RowBox[{"[", 
           RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vars", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"makeW", "[", "k", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ws", "=", "vars"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"varsf", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"vectorize", "/@", "vars"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Wf", "=", "varsf"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"W0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"makeInitializer", "[", "k", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"W", " ", "true", " ", "flat"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Wtf", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.8062349520611257`", ",", "0.8058281619635977`", ",", 
       "0.8373291816030192`", ",", "0.7906864569952768`", ",", 
       "1.1965576018047888`", ",", "0.30483187178626686`", ",", 
       "1.2476949293612638`", ",", "0.8154112123212373`", ",", 
       "0.12928385363990855`", ",", "0.8254921329944452`"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"W0", " ", "flat"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"W0f", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"vectorize", "/@", "W0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Y", "-", "Wn"}], "..."}], ".", "W1", ".", "W0"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"errEq", ":=", 
     RowBox[{"Y", "-", 
      RowBox[{
       RowBox[{"Fold", "[", 
        RowBox[{"Dot", ",", 
         RowBox[{"Reverse", "@", "vars"}]}], "]"}], ".", 
       RowBox[{"makeW", "[", "0", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lossEq", ":=", 
     RowBox[{"take1", "[", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "dsize"}]], 
       RowBox[{"errEq", ".", 
        RowBox[{"errEq", "\[Transpose]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"subW", "[", "Wf_", "]"}], ":=", 
     RowBox[{"Thread", "[", 
      RowBox[{"varsf", "\[Rule]", "Wf"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{"W", "[", "0", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"fs", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"fs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X0", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"fs", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"fs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"subX", ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "X0", "]"}], "\[Equal]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"fs", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"fs", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ",", 
         "\"\<X mismatch\>\""}], "]"}], ";", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", "X"}], "\[Rule]", 
         RowBox[{"Flatten", "@", "X0"}]}], "]"}]}], "\[IndentingNewLine]", 
      ")"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Y", "=", 
     RowBox[{"Array", "[", 
      RowBox[{"y", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"fs", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], ",", 
         RowBox[{"fs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Y0", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"fs", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], ",", 
         RowBox[{"fs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"subY", ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "Y0", "]"}], "\[Equal]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Last", "[", "fs", "]"}], ",", " ", 
            RowBox[{"First", "[", "fs", "]"}]}], "}"}]}], ",", 
         "\"\<Y mismatch\>\""}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", "Y"}], "\[Rule]", 
         RowBox[{"Flatten", "@", "Y0"}]}], "]"}]}], "\[IndentingNewLine]", 
      ")"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X0", ",", "Y0", ",", "dummy"}], "}"}], "=", 
     RowBox[{"generateXY", "[", 
      RowBox[{"0.01", ",", "1.", ",", "0", ",", 
       RowBox[{"First", "@", "fs"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"flatten", "[", "Ws_", "]"}], ":=", 
     RowBox[{"c2v", "[", 
      RowBox[{"vectorize", "/@", "Ws"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"unflatten", "[", "Wf_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sizes", "=", 
         RowBox[{"Rest", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Times", "@@", "#"}], "&"}], "/@", 
           RowBox[{"Partition", "[", 
            RowBox[{"fs", ",", "2", ",", "1"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"flatVars", "=", 
         RowBox[{"listPartition", "[", 
          RowBox[{"Wf", ",", "sizes"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"unvectorize", "[", 
           RowBox[{
            RowBox[{"flatVars", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"fs", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "2"}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "@", "sizes"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Define", " ", "loss"}], ",", " ", "gradient", ",", " ", 
     "Hessian"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"lossf", "[", "Wf_", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"lossEq", "/.", 
         RowBox[{"subW", "[", "Wf", "]"}]}], "/.", "subY"}], "/.", "subX"}], 
      ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"loss", "[", "Ws_", "]"}], ":=", 
     RowBox[{"lossf", "[", 
      RowBox[{"flatten", "[", "Ws", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"vars", "\[Equal]", 
       RowBox[{"unflatten", "[", "varsf", "]"}]}], ",", 
      "\"\<vars mismatch\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gradEq", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"lossf", "[", "Wf", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Wf", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hessEq", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"lossf", "[", "Wf", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Wf", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gradf", "[", "Wf_", "]"}], ":=", 
     RowBox[{"gradEq", "/.", 
      RowBox[{"subW", "[", "Wf", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"hessf", "[", "Wf_", "]"}], ":=", 
     RowBox[{"hessEq", "/.", 
      RowBox[{"subW", "[", "Wf", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ihessf", "[", "Wf_", "]"}], ":=", 
     RowBox[{"PseudoInverse", "[", 
      RowBox[{"hessf", "[", "Wf", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Manual", " ", "implementation", " ", "of", " ", "gradient"}], 
    " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"A", "[", "i", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"W", "[", 
         RowBox[{"i", "-", "1"}], "]"}], "..."}], 
       RowBox[{"W", "[", "0", "]"}]}], " ", "=", " ", 
      RowBox[{
      "fprop", " ", "needed", " ", "to", " ", "compute", " ", "derivative", 
       " ", "at", " ", "layer", " ", "i"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"Wf_", ",", "1"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"makeW", "[", "0", "]"}], "/.", "subX"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"Wf_", ",", "i_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"makeW", "[", 
          RowBox[{"i", "-", "1"}], "]"}], ".", 
         RowBox[{"A", "[", 
          RowBox[{"Wf", ",", 
           RowBox[{"i", "-", "1"}]}], "]"}]}], "/.", 
        RowBox[{"subW", "[", "Wf", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"B", "[", "i", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"W", "[", 
          RowBox[{"i", "+", "1"}], "]"}], "'"}], "..."}], "err"}], " ", "=", 
      " ", 
      RowBox[{
      "bprop", " ", "needed", " ", "to", " ", "compute", " ", "derivative", 
       " ", "at", " ", "layer", " ", "i"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"err", "[", "Ws_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Y", "-", 
       RowBox[{"A", "[", 
        RowBox[{
         RowBox[{"flatten", "@", "Ws"}], ",", 
         RowBox[{"n", "+", "1"}]}], "]"}]}], "/.", "subY"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"Wf_", ",", "n"}], "]"}], ":=", 
     RowBox[{"err", "[", 
      RowBox[{"unflatten", "[", "Wf", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"Wf_", ",", "i_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"makeW", "[", 
           RowBox[{"i", "+", "1"}], "]"}], "\[Transpose]"}], ".", 
         RowBox[{"B", "[", 
          RowBox[{"Wf", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}]}], "/.", 
        RowBox[{"subW", "[", "Wf", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dW", "[", 
      RowBox[{"Wf_", ",", "i_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"B", "[", 
         RowBox[{"Wf", ",", "i"}], "]"}], ".", 
        RowBox[{
         RowBox[{"A", "[", 
          RowBox[{"Wf", ",", "i"}], "]"}], "\[Transpose]"}]}]}], "/", 
      "dsize"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"gradf", "[", "W0f", "]"}], "==", 
       RowBox[{"flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"dW", "[", 
           RowBox[{"W0f", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"Range", "[", "n", "]"}]}], "]"}]}], ",", " ", 
      "\"\<Gradient incorrect\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.699982156807973*^9, 3.699982598214026*^9}, {
   3.6999826448060083`*^9, 3.6999826780909157`*^9}, {3.6999827216386127`*^9, 
   3.699982733320653*^9}, {3.699982914162751*^9, 3.699982941265422*^9}, {
   3.6999830257195797`*^9, 3.699983050992374*^9}, {3.699983224842721*^9, 
   3.699983310463262*^9}, {3.6999834195148563`*^9, 3.699983477039249*^9}, {
   3.699983587021646*^9, 3.6999835986448107`*^9}, {3.699983695110857*^9, 
   3.699983695349987*^9}, {3.699983748675165*^9, 3.6999837487802362`*^9}, {
   3.699983928707264*^9, 3.699983967510991*^9}, {3.699984047267655*^9, 
   3.6999840496660757`*^9}, {3.699985530553913*^9, 3.6999855458395042`*^9}, {
   3.699985913673225*^9, 3.699985969156344*^9}, {3.6999861003176413`*^9, 
   3.699986124454165*^9}, {3.699986355753088*^9, 3.699986396898237*^9}, {
   3.699986427650106*^9, 3.699986703287118*^9}, {3.699986754544344*^9, 
   3.6999867556102962`*^9}, {3.69998681994671*^9, 3.699986848372896*^9}, {
   3.699986892410982*^9, 3.699986893640285*^9}, {3.69998693003189*^9, 
   3.6999869570766*^9}, {3.6999870083330517`*^9, 3.699987068617716*^9}, {
   3.699987348308199*^9, 3.699987351371369*^9}, {3.699987415851831*^9, 
   3.699987416542459*^9}, {3.699987447054257*^9, 3.699987455017548*^9}, {
   3.69998755080951*^9, 3.6999875855353603`*^9}, {3.6999931554263773`*^9, 
   3.699993170663336*^9}, {3.699993203366107*^9, 3.69999320382825*^9}, {
   3.699993393086769*^9, 3.6999934430810833`*^9}, {3.699993484708765*^9, 
   3.699993485815668*^9}, {3.699993897808597*^9, 3.699993942358086*^9}, {
   3.699993998113549*^9, 3.6999940446577997`*^9}, {3.699994331070149*^9, 
   3.699994432768942*^9}, 3.69999451083252*^9, {3.699995021164749*^9, 
   3.699995041908965*^9}, {3.699995100933156*^9, 3.6999951103670893`*^9}, {
   3.6999952576223583`*^9, 3.699995257756886*^9}, {3.6999963660691767`*^9, 
   3.6999963666670017`*^9}, {3.699996480759503*^9, 3.6999965061522512`*^9}, 
   3.699996618534986*^9, {3.699998381714772*^9, 3.699998381848865*^9}, {
   3.699998415403894*^9, 3.699998420622656*^9}, {3.699998459911641*^9, 
   3.699998481132703*^9}, {3.699998702072735*^9, 3.6999987147901154`*^9}, {
   3.699998758951478*^9, 3.6999987598495913`*^9}, {3.700048600925748*^9, 
   3.7000486062226753`*^9}, {3.700055975452201*^9, 3.700056166226185*^9}, {
   3.700057412005982*^9, 3.70005747468043*^9}, {3.700057506009913*^9, 
   3.700057512710882*^9}, {3.700057580611055*^9, 3.700057584145731*^9}, {
   3.7000821620717173`*^9, 3.7000821624047823`*^9}, {3.700229138497568*^9, 
   3.7002291702348213`*^9}, {3.700229209657181*^9, 3.7002292105848627`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Newton Method", "Section",
 CellChangeTimes->{{3.699993645733891*^9, 3.699993650072628*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"pointList", ",", "gradList", ",", "preList", ",", "lossList"}], 
    "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"takes", " ", "loss"}], ",", " ", "grad", ",", " ", 
    RowBox[{"learning", " ", "rate"}], ",", " ", 
    RowBox[{"produces", " ", "list", " ", "of", " ", "losses"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"globals", ":", " ", "points"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"optimizeNewton", "[", 
    RowBox[{"lr_", ",", "w0f_", ",", "iters_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "wf", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pointList", ",", " ", "gradList", ",", "preList", ",", " ", 
         "lossList"}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"wf", "=", "w0f"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"iter", "=", "1"}], ",", 
        RowBox[{"iter", "\[LessEqual]", "iters"}], ",", 
        RowBox[{"iter", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pointList", "=", 
          RowBox[{"pointList", "~", "Append", "~", "wf"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"gradList", "=", 
          RowBox[{"gradList", "~", "Append", "~", 
           RowBox[{"gradf", "[", "wf", "]"}]}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"preList", "=", 
          RowBox[{"preList", "~", "Append", "~", 
           RowBox[{"ihessf", "[", "wf", "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"lossList", "=", 
          RowBox[{"lossList", "~", "Append", "~", 
           RowBox[{"lossf", "[", "wf", "]"}]}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"wf", "=", 
          RowBox[{"wf", "-", 
           RowBox[{"lr", "*", 
            RowBox[{
             RowBox[{"gradf", "[", "wf", "]"}], ".", 
             RowBox[{"ihessf", "[", "wf", "]"}]}]}]}]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.6999936898161488`*^9, {3.69999466562971*^9, 3.699994672229844*^9}, {
   3.6999949807219954`*^9, 3.699995007660274*^9}, {3.6999950594576387`*^9, 
   3.699995152141176*^9}, {3.699996346177471*^9, 3.6999963465813847`*^9}, {
   3.69999850948297*^9, 3.6999985170439663`*^9}, {3.69999855772528*^9, 
   3.699998580839075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"optimizeNewton", "[", 
    RowBox[{"1.", ",", "W0f", ",", "20"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/git/whitening/exp/data/natural_gradient_multilayer_losses_newton.\
csv\>\"", ",", "lossList"}], "]"}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "lossList", "]"}]}], "Input",
 CellChangeTimes->{{3.699996395704974*^9, 3.699996417545793*^9}, {
  3.699998522516466*^9, 3.699998538987547*^9}, {3.6999987749703493`*^9, 
  3.6999987753886003`*^9}, {3.7000561981753407`*^9, 3.700056198773717*^9}, {
  3.70016503943431*^9, 3.7001650450505657`*^9}, {3.700229220003145*^9, 
  3.700229222988081*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7LuME2vrTK/ZQwUclpt9z6jLM3eAcDkcvk8W
tfZfJQLlCzgsUFM9xiHyAapexGHW9TuC04tPQfkSDiXBAZIMvruhfBkHHdsd
udm6u6B8BYcKT36FIB0YX8nBZPEeOQRfBY2vhsbXQONrofF10Ph6aHwDNL4h
Gt/IwRSFb4wmbwLnAwAKsUm3
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 20.}, {0, 0.7141793797937289}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.699996417950671*^9, 3.699998309498437*^9, {3.699998523896056*^9, 
   3.69999853939727*^9}, 3.699998582233848*^9, 3.699998727912715*^9, {
   3.699998767431377*^9, 3.69999877687151*^9}, 3.700048580115987*^9, {
   3.700056194173472*^9, 3.7000562002548113`*^9}, 3.7000575903698378`*^9, 
   3.700134223296883*^9, {3.700165046784136*^9, 3.70016507009164*^9}, 
   3.700229224684703*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gradf", "[", "Wf", "]"}], "/.", 
  RowBox[{"subW", "[", "W0f", "]"}]}]], "Input",
 CellChangeTimes->{{3.7001597054358377`*^9, 3.70015971134457*^9}, {
  3.7001597533765306`*^9, 3.700159755083949*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.11552733893688194`"}], ",", 
   RowBox[{"-", "0.23724100924847968`"}], ",", 
   RowBox[{"-", "0.11755797625643181`"}], ",", 
   RowBox[{"-", "0.24141102174544235`"}], ",", 
   RowBox[{"-", "0.06095035591483481`"}], ",", 
   RowBox[{"-", "0.3891749766583454`"}], ",", 
   RowBox[{"-", "0.05918549089861818`"}], ",", 
   RowBox[{"-", "0.3779061121672018`"}], ",", 
   RowBox[{"-", "1.1353006632058478`"}], ",", 
   RowBox[{"-", "0.5170028728999797`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.700159711758363*^9, 3.700159756075643*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"lossf", "[", "Wf", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Wf", ",", "2"}], "}"}]}], "]"}], ")"}], "/.", 
  RowBox[{"subW", "[", "W0f", "]"}]}]], "Input",
 CellChangeTimes->{{3.700159666590013*^9, 3.700159695188916*^9}, {
  3.700159759755471*^9, 3.7001597822437277`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.0274989386704215`", ",", "0.05647040798712714`", ",", 
     "0.0275332400444273`", ",", "0.056540847526915995`", ",", 
     RowBox[{"-", "0.03261312234388659`"}], ",", 
     RowBox[{"-", "0.20823850716593834`"}], ",", "0.013984427778396242`", ",",
      "0.08929216692093248`", ",", 
     RowBox[{"-", "0.16665387122253686`"}], ",", "0.011269118046821049`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.05647040798712714`", ",", "0.11596472927381211`", ",", 
     "0.056540847526915995`", ",", "0.1161093802946379`", ",", 
     "0.029555345609048458`", ",", "0.1887142538363951`", ",", 
     RowBox[{"-", "0.01828774779959479`"}], ",", 
     RowBox[{"-", "0.11676935624437848`"}], ",", "0.09681607749440851`", ",", 
     
     RowBox[{"-", "0.04561948669382048`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0275332400444273`", ",", "0.056540847526915995`", ",", 
     "0.028414144808385226`", ",", "0.05834982830303646`", ",", 
     RowBox[{"-", "0.03320333124878924`"}], ",", 
     RowBox[{"-", "0.2120070583637359`"}], ",", "0.014196949328597247`", ",", 
     "0.09064914126665147`", ",", 
     RowBox[{"-", "0.17006148000456278`"}], ",", "0.011217281546557368`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.056540847526915995`", ",", "0.1161093802946379`", ",", 
     "0.05834982830303646`", ",", "0.11982421029926901`", ",", 
     "0.030040006294333968`", ",", "0.19180886760939356`", ",", 
     RowBox[{"-", "0.01867754466610984`"}], ",", 
     RowBox[{"-", "0.1192582537110226`"}], ",", "0.09753558267777765`", ",", 
     RowBox[{"-", "0.04693455843615189`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.03261312234388659`"}], ",", "0.029555345609048458`", ",", 
     RowBox[{"-", "0.03320333124878924`"}], ",", "0.030040006294333968`", ",",
      "0.007588789847493816`", ",", "0.04845528902062849`", ",", 
     "0.007369384517488292`", ",", "0.04705436095545153`", ",", 
     RowBox[{"-", "0.46152470339902507`"}], ",", "0.0643729551875613`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.20823850716593834`"}], ",", "0.1887142538363951`", ",", 
     RowBox[{"-", "0.2120070583637359`"}], ",", "0.19180886760939356`", ",", 
     "0.04845528902062849`", ",", "0.30939254891187096`", ",", 
     "0.04705436095545153`", ",", "0.30044746337656947`", ",", 
     "0.902580075230408`", ",", 
     RowBox[{"-", "0.19185296190043274`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.013984427778396242`", ",", 
     RowBox[{"-", "0.01828774779959479`"}], ",", "0.014196949328597247`", ",", 
     RowBox[{"-", "0.01867754466610984`"}], ",", "0.007369384517488292`", ",",
      "0.04705436095545153`", ",", "0.007156653544819674`", ",", 
     "0.04569604942338276`", ",", 
     RowBox[{"-", "0.44815147928818305`"}], ",", "0.06251390641415631`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08929216692093248`", ",", 
     RowBox[{"-", "0.11676935624437848`"}], ",", "0.09064914126665147`", ",", 
     
     RowBox[{"-", "0.1192582537110226`"}], ",", "0.04705436095545153`", ",", 
     "0.30044746337656947`", ",", "0.04569604942338276`", ",", 
     "0.29177448926750504`", ",", "0.8765052945996928`", ",", 
     RowBox[{"-", "0.18626629351250928`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.16665387122253686`"}], ",", "0.09681607749440851`", ",", 
     
     RowBox[{"-", "0.17006148000456278`"}], ",", "0.09753558267777765`", ",", 
     
     RowBox[{"-", "0.46152470339902507`"}], ",", "0.902580075230408`", ",", 
     RowBox[{"-", "0.44815147928818305`"}], ",", "0.8765052945996928`", ",", 
     "2.6330961816517395`", ",", "1.1990997152527312`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.011269118046821049`", ",", 
     RowBox[{"-", "0.04561948669382048`"}], ",", "0.011217281546557368`", ",", 
     RowBox[{"-", "0.04693455843615189`"}], ",", "0.0643729551875613`", ",", 
     RowBox[{"-", "0.19185296190043274`"}], ",", "0.06251390641415631`", ",", 
     
     RowBox[{"-", "0.18626629351250928`"}], ",", "1.1990997152527312`", ",", 
     "0.546065621704671`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7001596853455343`*^9, 3.7001596960072823`*^9}, {
  3.7001597619182367`*^9, 3.700159782579341*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/git/whitening/exp/data/natural_gradient_multilayer_hess0.csv\>\"", 
   ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"lossf", "[", "Wf", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Wf", ",", "2"}], "}"}]}], "]"}], ")"}], "/.", 
    RowBox[{"subW", "[", "W0f", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7001598273095913`*^9, 3.700159851306964*^9}, {
  3.700165092343772*^9, 3.7001650932983027`*^9}}],

Cell[BoxData["\<\"~/git/whitening/exp/data/natural_gradient_multilayer_hess0.\
csv\"\>"], "Output",
 CellChangeTimes->{
  3.700159852711735*^9, {3.700165082941598*^9, 3.700165093769884*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Natural Gradient Method", "Section",
 CellChangeTimes->{{3.699996377424655*^9, 3.699996383314393*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"get", " ", "single", " ", "X"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"makeX1", "[", "i_", "]"}], ":=", 
     RowBox[{"v2c", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"W", "[", "0", "]"}], "[", 
         RowBox[{"j", ",", "i"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"fs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"Join", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"makeX1", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "~", "Join", "~", 
         RowBox[{"{", "2", "}"}]}], ")"}]}], "\[Equal]", 
      RowBox[{"makeW", "[", "0", "]"}]}], "]"}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"makeY1", "[", "i_", "]"}], ":=", 
     RowBox[{"Y", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "i"}], "]"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"errEq1", "[", "i_", "]"}], ":=", 
     RowBox[{
      RowBox[{"makeY1", "[", "i", "]"}], "-", 
      RowBox[{
       RowBox[{"Fold", "[", 
        RowBox[{"Dot", ",", 
         RowBox[{"Reverse", "@", "vars"}]}], "]"}], ".", 
       RowBox[{"makeX1", "[", "i", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"lossEq1", "[", "i_", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"take1", "[", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", " ", "dsize"}]], 
        RowBox[{
         RowBox[{"errEq1", "[", "i", "]"}], ".", 
         RowBox[{
          RowBox[{"errEq1", "[", "i", "]"}], "\[Transpose]"}]}]}], "]"}], 
      ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"lossf1", "[", 
      RowBox[{"Wf_", ",", "i_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"lossEq1", "[", "i", "]"}], "/.", 
         RowBox[{"subW", "[", "Wf", "]"}]}], "/.", "subY"}], "/.", "subX"}], 
      ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gradEq1", "[", "i_", "]"}], ":=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"lossf1", "[", 
        RowBox[{"Wf", ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Wf", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gradf1", "[", 
      RowBox[{"Wf_", ",", "i_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"gradEq1", "[", "i", "]"}], "/.", 
      RowBox[{"subW", "[", "Wf", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Assert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"v2c", "[", 
         RowBox[{"-", 
          RowBox[{
           RowBox[{"B", "[", 
            RowBox[{"W0f", ",", "1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], ".", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"A", "[", 
           RowBox[{"W0f", ",", "1"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "}"}]}], "/", "dsize"}], "==", 
      RowBox[{"First", "[", 
       RowBox[{"unflatten", "[", 
        RowBox[{"gradf1", "[", 
         RowBox[{"W0f", ",", "1"}], "]"}], "]"}], "]"}]}], ",", " ", 
     "\"\<gradient incorrect\>\""}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fisher", "[", "Wf_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"dsize", " ", "x", " ", "fsize"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gradList", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"gradf1", "[", 
            RowBox[{"Wf", ",", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"First", "[", "fs", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"gradList", "\[Transpose]"}], ".", "gradList"}], "/", 
         "dsize"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifisher", "[", "Wf_", "]"}], ":=", 
     RowBox[{"PseudoInverse", "[", 
      RowBox[{"fisher", "[", "Wf", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"optimizeNatural", "[", 
      RowBox[{"lr_", ",", "w0f_", ",", "iters_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "wf", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "pointList", ",", " ", "gradList", ",", "preList", ",", " ", 
           "lossList", ",", "temp"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"wf", "=", "w0f"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"iter", "=", "1"}], ",", 
          RowBox[{"iter", "\[LessEqual]", "iters"}], ",", 
          RowBox[{"iter", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pointList", "=", 
            RowBox[{"pointList", "~", "Append", "~", "wf"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"gradList", "=", 
            RowBox[{"gradList", "~", "Append", "~", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"gradf", "[", "wf", "]"}], "}"}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"temp", "=", 
            RowBox[{"temp", "~", "Append", "~", 
             RowBox[{"gradf", "[", "wf", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"preList", "=", 
            RowBox[{"preList", "~", "Append", "~", 
             RowBox[{"ihessf", "[", "wf", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"lossList", "=", 
            RowBox[{"lossList", "~", "Append", "~", 
             RowBox[{"lossf", "[", "wf", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"wf", "=", 
            RowBox[{"wf", "-", 
             RowBox[{"lr", "*", 
              RowBox[{
               RowBox[{"gradf", "[", "wf", "]"}], ".", 
               RowBox[{"ifisher", "[", "wf", "]"}]}]}]}]}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"optimizeNatural", "[", 
     RowBox[{".001", ",", "W0f", ",", "20"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/git/whitening/exp/data/natural_gradient_multilayer_losses_fisher.\
csv\>\"", ",", "lossList"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"lossList", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.699998008511332*^9, 3.69999802970809*^9}, {
  3.6999980699830923`*^9, 3.699998115492311*^9}, {3.6999981620238132`*^9, 
  3.69999822586194*^9}, {3.699998612549111*^9, 3.6999986129233723`*^9}, {
  3.699998815126917*^9, 3.699998835771031*^9}, {3.700001538705743*^9, 
  3.700001578257485*^9}, {3.700001657068907*^9, 3.7000016582819357`*^9}, {
  3.700002076531096*^9, 3.7000021281625767`*^9}, {3.700002164867529*^9, 
  3.700002182550308*^9}, {3.700002216470332*^9, 3.700002263745902*^9}, {
  3.700082211478656*^9, 3.700082220773239*^9}, {3.7001494555838547`*^9, 
  3.7001494621275*^9}, {3.700159815261712*^9, 3.700159816768655*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7LuME2vrTK/ZQwUcpp/7EWvheRnK53AovNSV
xLv8ApQv4GBw4JHPwpNnoHwRByEuKRu7UyegfAkHVb8be1bbHoXyZRw+qzjo
c4cfgvIVHCYnx0y6H3wAyldyYA3/8kzdeh+Ur+KQL7pt8Zd1e6B8NYcenrDP
y2fshvI1HD7IeqWcubsLytdyUIlgdf9TDOPrOMw1k920xgXG13PY6296bbUx
jG/gUHXx4NoUPRjf0GHTwrdBj3RgfCOHOav39FfA+cYOvW2bnWPgfBOHLuGq
EyFAPgBfU1cH
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.703125, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 20.}, {0, 0.347015020791155}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.69999821258387*^9, 3.699998226236745*^9}, 
   3.699998312173749*^9, 3.69999862551126*^9, 3.699998738339695*^9, {
   3.699998786572544*^9, 3.699998836871765*^9}, 3.6999988858001957`*^9, {
   3.700001541138788*^9, 3.7000015795585823`*^9}, 3.7000016595365477`*^9, 
   3.70000194699008*^9, 3.7000020160383*^9, {3.7000021011285954`*^9, 
   3.7000021296417*^9}, {3.700002169197653*^9, 3.700002184186553*^9}, 
   3.700002224968525*^9, 3.700002265070794*^9, 3.7000575931049013`*^9, 
   3.7000801287885036`*^9, 3.700082190051897*^9, 3.700082222672813*^9, 
   3.700134226237604*^9, 3.7001494635505743`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plots", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayPlot", "[", 
      RowBox[{"#", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "100"}], "}"}]}]}], "]"}], "&"}], "/@", 
    "preList"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"Partition", "[", 
   RowBox[{"plots", ",", "5"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6999988970449457`*^9, 3.6999989451291533`*^9}, {
  3.700001738578396*^9, 3.7000017454473352`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJzN109IVEEcB/BnWYcyqDSNLCqoIOggJQhCDLEYKrFRkVFhZu5uRGiHTIKI
lGpLEQ/bnw0ScpMVSY1WKzJBIhS0pEOCbZ4UOhRUP1vwD5Fur978gr5zmIH1
4MLjc/j+Zt/Mj7fzZjefOnfQu9iyrGXySrav992Z91/PkUCtv58JjZZVHekM
eyZIoFznfnM2P+cLKXKeXjWcd7SGFE3vn5G6emjHNRKo6fgD/o1ve2MkUK7z
T2bNFreRIucjWc2F7+KkaHr/29PuvIZZEijX7a71XK34RYrm62u8cXz6z7r+
13T8SM3nwr4pe10g122Yc9/6as8X5VzX35nowMWkMCmazu9k9wXKvUMCNR2f
9mjX4fZWEijXBfonN42OkSLnS71bfpwOkSLnwZ3ZU9nNpMi5rr+6+T89nxNf
Zf/eUNPx+1t67m0dJYFyXcb3gDv4iRQ5r3OtSxnbS4qcd7RUeB8+IUXOM/d4
mi4XkKJpf3XrWyv3A9R0vL+8v3Hmg/27B03Hx0quvPINkUC5bt+RolBqFyly
7rt0M95k78eoaX91z2+i+0Oieefwi0CufT+U68qWHzu0LUqKnNefGTzhcZGi
aX91z69uf9CtL9H3my7PL1kTq257KVDT70+T/US5bkA+ryjnvm/OfoCa3r9I
vs9QrlshzwvofPWv425r8YPouEC57nq500+U83r5vKKm8/sZdvZblOtc8n2G
ch6S5wWU81J5HkP/zWPJs8pF7V2q89TfRPOI3G/RhTK/59uD6yNV4wLluscr
nX6iC2X+KZXOeQHluvSPznkM5XxQnndRzmPy/wTK+W8h5xJK
        "], {{0, 0}, {10, 
        10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {195., -194.4}, 
      ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJzF109IVFEUBvAZHVyoBG2KyEUijDhuMmVKajjRIkgMwk21MgP/zGoWUlnZ
wkTMghZlqVmiBK6mmIQME6LBgpQBW6hlZDWRYC06FTUWYjT07mnxXepe8DE9
ePwW33n33Xfmcd+dwqORmvpsj8eTq05f+vRf6j7UlmJCPb+PT9RVtef83iXW
lPzfyvH3/EzgY6yzhwm1HT+1Zeb5VB8Tanu9NxA8HPnChErdi5azlR/GWFPy
y+37LpT8ZE3JV2NdJ5tWWNOt/pnyhmtTDaH074na3r/ox5sNxctMqNR9fUgL
tausKbmpv0OJG/krvaxpOz/vXMfm/nvpcUHb66Pl8Yv+B0yo1G3zTq+resea
kkeb28YP3GVNyXcN12zfOsKakpv6a5r/icrS6+HXTKjUDZPv1cgia9qOb8qP
f9+0e76RCZW697G+t8FR1pS856mv/2aYNSW/pfqJ2s5/Wa0HqO31p3fWdkYf
MaG21x+py/82+JIJlbr9BbHCgfusaTu+qb+m93et64Mp/3xlIu/YDBPq1vhl
44mD/nomVOqqVT9RyZvV+4pKblofTPNrVd8z1K3nLw8vZNVVPCbUrfEn1fuK
ujX+/86DpWPxZ+eShEpdKuL0E83U86dmne8Z6tb9OwKBwdBonNBMPV/yqrMe
oFK3Xq23qOSJkPM9Q23nv/GOsx9Dpa5a7XdRyVuK5p80Zic1/9ynTPUTzVB/
TfmpHc5+AZW622o/hko+pPa7qOQ56v8EKvkvGWKjng==
        "], {{0, 0}, {10, 10}}, {
        0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {585., -194.4}, 
      ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJzFl0FIlEEUxxc+L1qKKIUXRYk6qRGSdBsEhXC9uJCQF8FcQQ0rFTVkXVYM
dW8aIQtF0SWCFIxQXD2Iuh9CkYi4oAh5WIQiekuyJYjoh827/IecAT/0g+F3
+P/nzZvH8Ga+osZHPr/l8Xgy5EhzRpPdO7TwiwTSc/IlxWj5jBVcJ4Wsn07+
/q8vzedtlkZIIE3jd67lXS14TQJpOj8arE39cPaLZF9DfU/xx1lSyHrOXvP1
1QNSyHp3xZZ9M0UK3aqfTs+87318Y48E0nT993X99+JOvkj2LVSMdW06+0Wy
rqtv7OhpnTdMCk3z6x7+nvnHduoKNJ3vv/VgvzVGAsm+4HbwWTJBClmv3okP
rDvnAcl6U+pwKjRBClnX1VeXv7Xcnlb4lQSSfWtFi682PpNC0/g6vbLvXX2k
gwSSfQ1Zb7NWpkkh6yPW4d8vPaTQtL66/M7aH0q3rPziKAmk6fzB/JdRe5cE
kn1v7N+11+ZJoWl8XX115/ey7AdI0/U75lbDySMSSPY9aRkvvOLkgzSNr9NL
vLfTX7SRQJrWt0qeVyTruv6gy++s95tOD+cGYnez4wLpVvyAPK9It+JftP6t
LBQR4wmBZF+5rCfyvPbfK+8zpFvr+2o+DU/lbAjkee3voewHSPaVyX6LZH1b
3mdI0/x177Pn8r2LZN2X/WHy0p2EQtZ/ev/VE+lWfdtlv0Waxk+X7wUk+5bk
ewzJuu7965f/E0jWjwHm7car
        "], {{0, 0}, {10, 10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {975., -194.4}, 
      ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJzFl01IVFEUx5/NgFYigu5qrEmiRYiMm6DNNSyK2oS0CYXCkhQHJXQY8ekE
bWrVbKQvdAq0RSGBZCGDCJpkLRQHP8nNQOgMkh5xECUSesQ9Lf4XuxfmUQ8e
v8XvvPtx3n33nueva6mu91iWdUjeXue2r0Suf0mTQFq/r03ReS/dFBgjhez/
Tr7290GPnZqIkkCatl8ZXSp81UsCafp857XwDeHMF8lx/eOlvtAgKWQ/9+Ls
1x+7pJB926rvac46KXQrfzr/6dSDvm6nP6Rp/4nTy/Q2QwLJcd35V48nnPki
2dsyn0j26dDH8lybFLK/ELNLLv0khew9tw727kyTQtP5HRvJtHRMkkBy3Fos
/OzIN1LIfmvhXGH1B1LIvurh4tBFZz0i2evyqxt/VX0yXjPqtAvkuJ4Nf15R
nBSatq/zzdHZzGgrCSTHBSK7tYl3pJB98aMe60yEFJrmVze+bPeHgYb2lfkh
EkjT54PxsqjP+d6QHLd+534m6LwPpGn7uvzq1m+2+4PO5909+rgyRgLpVvsV
9rZ34DYJpGl+detXtz/oxpft+abz/unDr0tGkgLJcVMHUo3eE8MKTftvlesV
6db4/7c/vzeR2F5NCSTHFch8Iv/Z/Pk8Q7rU/+LwzHjNy6RActz3wSdvAjfj
Ct3q/6TcD5Ac1y/3WyT7LnmeIdlflvUCkn1Y1mNI9rasd5F/8rPcVfz8fUoh
+88yn0i38petr5D1ApLj1mQ9hmS/IOtdJPsO+T+BZP8La+3oFA==
        "], {{0, 0}, {10,
         10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {1365., -194.4}, 
      ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJzF101IVFEUB/BpcpNSC4laOC1Kw2hRNMjbFB6GSgiKsCCiXKSOQYQfDOEi
MAqjzKCiwFYVVLusWRhKCwnta1FGPMNFMfgxk9iAneljokVBjzhn87/UveAj
Bx4/hv957953eHPfnbVN7ftalkYikVI5SoLj4My5VDrLhEb+fAo0fbW6/Ema
DTX/t/r5e/74TNTzuphQ1+s3plde7L/OhLqev/Fh3Vghw4Rq3RD59T232VDz
ZEfz3QdFNtR8rvLQ/OgMG4bVP1v+Pc+JHzkm1HX81U87UuWfmVCtqz85P9z3
lQ01t/V369QWr+wYG2re7XdNeQU21Px1sWFT5zgbut5fbChR6z9jQrXu2om9
iWwwX1RzP7N79so9NtT8/Zeqqs6zbKi5rb+2+cfbMt/m7jOhWnfgZfHN6eA7
6np9W94S83tftDKhWlez7eaI38+GmnPPnp8Nwe8d1Xxc+om6zr9Z1gPU9fwP
Y92bbwXrHep6/vrs5I1fwfOKat2Ad3z7kkE2dL2+rb+253eh64MtXxONt965
wISGdf26VUfW8X4m1LW/SXleUc0rZD1AXec/LO8zNKz7XzbRODAymCNU6z75
O89Hd701dB0/Ls8rGtb8FzvPbOhtSsXyhGpdu/QT/V/3/1zeZ2hY46deVSfb
8jlCte7o5eWP+monDMMan2Q9QLXunay3qOY18j5DNb8k+wVU81nZj6GaZ2W/
i2r+8dRoWcmKvKHmvvQTDat/C80rZb+Aat0O2Y+hmtv2v4fl/wSq+W9OhfG5

        "], {{0, 0}, {10, 10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {1755., -194.4}, 
      ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}]}, {InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJzF101IVFEUB/BHGkRCRk1RplFKMLaQ2rgo6yyGaBHmB2ZGpGZouRjEjz4o
q1nFkFT0AcogRQsjw4kgGSIHTEjIyoyxL8JSgprFGCc1XGSLws5pcQ51L/io
gcdv8T/v3vsOj/vurK2qK65OchxnIV3JP69DORfOL36PIHVmf19gS33FiL8d
lZz/Xf79OS9O/pT1rRxBajv+/enwjjUtCFLb+z9uzg4NPEOQct3QnarY1FlU
cn7x8t7KnglUcn7af7s78xUq3eqfKQ+kxl5sf4MgtZ0/dHRjY/QzgpTrdr/d
Nb8ggUrOTf091pufcmInKjn/unIGu+Ko5Hzk1HjfupeotH2+5sz4ng29CFKu
OzOZ5f0+jErOfc3R/s5WVP7OQ2XHK/ajknNTf03rfzRx40F/G4KU64bDsekP
11FpO74pX5WX42nchyDluvSMI+f6rqKS8wP3Sg5vqkcl59uon1Lb9UdpP5Da
3j/qPfi8vANBant/Q3iyp30KQcp165+kLRvsQqXt+Kb+Bul9lXI+1/3BlNeO
tazubkCQujX+69GbD6/kIki5Lpv6KeV8Ob2vUs5N+4NpfUX0PZO69fwL0iOL
CufFQcp1S7YW1fiS3ilt5w/S+yp1a/3/O494SpvGCxIg5ToP9VP6r55/kL5n
UrfmX5F3138rEAcp1z0ty2jyeceUbs1/jfYDKdc9pv1Wyvkl+p5JOU9N+3Ve
kHJ+ks5jUs6BzrtSzvMjgaVOZULJuZf6KXWrf3PNO+i8IOW6IJ3HpJybzr+1
9H9CyvkPeDXNhg==
        "], {{0, 0}, {10, 10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {195., -583.2}, 
      ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJzFl01IVFEUgMeyFpEZLqyFmwklSDGKpCjxujDcOTgjIomNFAmaY80qsnRj
KIZDJiLqQookAhFTMRVB0CILkQGlRvFnBsNxapAjFDUgQoPe4+Ic8l54j3zw
+BbfeffncOfcM9Zb9+x3DlsslmPyjY2+rtritnwfCErLzrMpSjwnPH1PgBH9
/sTn3/6ruzUl8TwISt3xQ30rA+NuEJS63z9qd7y5NAqCEuOqz9rybpcB457/
5r2ZvQGM6P9MdF9LnQJGs/Kn8pn2Rde5jyAodecv9V20lodAUGJcfdjb4fQD
I3pVfl/lXC5OPgOM6D3DRVXX14AR/cumooXEWWDU3Z8163TGyFsQlBj37unD
UOQ9MKL/7l8YOv4AGNH/nJ9M86YDI3pVflXrj6kJTjqqQVBi3Oc62/TdVmDU
HV/lK4+U2e5fBUG5t/+B5qPp0XpBiT5hs/tLgx0Y0f+Q+aTUXb/R+hBwDyds
PQNBqft9ZsFSS++v6O+OEOMCV2KGUjqBUXd8VX5V59dofVD5kU/N66ccICjN
Gn87p6ciLhYEpW5+VedXVR9U6zN6v6n8zKAv7XlwXVBiHFyI/13uDDDqzp8t
zyulWes/aF8wZz/UOxoWlBj3WuaT8n/t3+j9pvKRhv7x3A8hQYlx210nbySt
rDKaNf+YrAeUGLcs6y0l+gl5n1Gib5H9AiX6iOzHKNE7Zb9Lib4wozH4AsKM
6OdkPinNyp9Rv/V4t1+gxDhVf6bqfyvl/wlK9H8B3l7Yug==
        "], {{0, 0}, {10, 
        10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {585., -583.2}, 
      ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJzF112ITGEYB/Aj9sJqJ7YUzdgZjOJiaJYk4fExaiOF1tdi7ZKsLfYC+WiV
EqXcLGYyUdbFbrQ+GrW+FjdsuVK7SxZtI1u72+yYZ4UL5WvieW7+b5y39sTU
6Xfxf8553/P09p53Jm+vW7tzpOM4hXKNyl8zaituf+hkQp1fvyG6UHbu8I46
NtT87+rvz/mW1lvhaZwj1Pb5PufZoy8xJtT2/sb2YPe8RiZU68LXo9Hjc9lQ
88zmS6F4hg01/3ovM2VpGxt61T+3fFtBW31xigm1HT92tubqojQTqnUnJwbv
HMqvF1Rzt/6umVVccyqdM9S8L1Sy58BnNtS8a0Ls3f3HbGj7fjNnNz9MJplQ
rTu2ceyG1ptsqHlqcT81rGRDzafHh15l8usZ1Xy59BO1nX/v/KkHq8uZUK0L
JF7sip1mQ9vnu+W+ZeOvPf2WI1Trzkya01e9iQ0139tZVdrlZ0PNb0g/Udv5
F8l+gNre728vS6Z3M6G290cf9DS/ZyZU68r3r35ScIQNbZ/v1l+39Tvc/cEt
X1X/MrEvwoR69fzEJ39o4G6OUK1bL/1ENR8n6xXV3G1/cJvfVvmeoV69//OW
ow0dJ/oJ1bpEt68pMOKtoe34EVmvqFfz/9950feF8UjtIKFad1H6if6r938j
3zPUq/GDhWOaKrMDhGrdldSSQOpyr6FX4y+Q/QDVuqDst6jmUfmeoZr3yHkB
1fyHnMdQzc/LeRfVvKJkXYv/9aCh5h9H/+4n6lX/hptn5byAat0KOY+hmmfl
vItqHpb/E6jmPwE5p7VH
        "], {{0, 0}, {10, 10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {975., -583.2}, 
      ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJzF101IVFEUB/CJJEqbgkKTWmT0YYlDaDBWMpyihQQWg0FQiz6ZaqGIQoS4
m6BV35QLKwxkBKlFQphEBAVC2BjU2Iem0JQNoznvRIErA4c4Zxb/S70L86gH
j9/if969dw6P++6sO9HcEFno8/kK5S7I3msPpxqXjDGhvt/Xd/pZFM58amVD
zf+uXn/O62vb3pY9dgi1Hf9FuO/XSz8Tavv8neCRL/VXmVCta7/y7ub+5Wyo
+YqikdHjDhtqXr2jsyH6lA296p9b3rH+0diTbibUdn5/Yur+hQQTmquLLRjY
EmdTyd3623UxM7y10zG0XV/PmevRwbtMqO3zb1LxeEmUCdW6SGvfQG12PFTz
jmB1aXE5G2p+oyI5UvHMMdR8mfQTtV3/psFLr5/vZEK17mQycHaoiw1tx3fL
P06lY4v6HUK17lh4qTOb7Qeq+eTpyo2pD45hrn/ST9R2/fnuD3Oxy6F0DRNq
+3ygpXFx3TgTqnXkX7Ov6QAb2o7v1l/X9zfP/cEtrwrOnKtczYR6Nf72ZPlw
abNDqNbtkn6imk/I+4pqnpD9ALVdf77fN7e8e+7Q0J5QilCt+zq56n3i2rih
7fyb5X1FvVr//85v9QdLHpyfJlTrHko/0X/1+3vle4Z6Nf/e3syrmZo0oVp3
anc8Epj9bOjV/BtkP0BzdT2y36KSt8j3DLVd3zY5j6Fa90POu6jmTXWj946G
vhlqflD6iXrVv3zzKjkvoFp3W85jqOYr5byLal4m/ydQzecBkYaxVA==
        "], {{0, 
        0}, {10, 10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {1365., -583.2}, 
      ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJzF11FIU1EYB/BBGW0vtRU9LMqkfEhYL0kjRnxEi8oIyqKECCKxl5mRqwYr
ikDKh5oOE8qHIHJQgeBDBiH40CIJIQmC+RISWWIP5xsZlLGsqO97+R/qHuhS
g8vv4f+de879uJx7VnPsZGPLgkAgEJJr4Y/r3s6hN/sMExr4+StTtlKqvMiz
peZ/Vn+/zye2zY9Fegyhrvdfl9uUDb40hLqO76rvfTbayYRq3an22IEzH4yl
5l3DR5dv+MyWmo/vaW1KjrOlX/3zyq9Vh3ZtvcWEus7/sSm649EoE6p1wbdn
i8kxttQ8J/1ENV+WbOy9fMhYuq7v8GTtdP44E+o6vi5R9SqWYkK1rtJxYmDz
dbbUPNwZL58LsaXmA9nuwYsFY6m5V3+91p/hkefJeiZU656mBi81l9jS9f5e
+ZfJTE04ZQjVuv7V5f4ns8ZS86r7a2MNOWOpeUT6ibquv1b2A9R1vNm7ZShf
MYS6jqfdDbcTD5hQrWteVWyJ17Gl6/29+vtV3ldU86uyH6Cu83vl39rnbgTX
MKF+3f/I7JILd2KGUNf+fpL3FdV8vewHqOv6S/I9Q/16/vM3pzMrOqYI1bp0
T7S62DZh6Tr/dnlfUb/W/7/zxYW+RZH4DKFaV5B+ov/q+ffL9wz1a/6+kSsb
C3PvCNW6qaUrDz7ufm3p1/zh9K/9ANW6GdlvUc0fyvcMdV2f1/nstJx3Uc15
Pj2aSby31HxY+on61b+/zdvkvIBqXVTOY6jmXuffu/J/AtX8OyOMp0M=
        "], {{0, 
        0}, {10, 10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {1755., -583.2}, 
      ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}]}, {InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJzF1k1IVFEUB/AHMwuLcEDKRR+LUktqUVJYEnECCTc5SokuxIWBEVL0AQMx
IwY5KJhCkG6yFBMxhYLCoXYRKdEoRuoiCsGJpgli7nUKIWphm3MQ/jd8F96j
Bobf4n/uxzs87ru7z10+0xJwHGcz/4OO/Fbo7zrO6N6G/tWXmtCNx62Pd8t7
h2JXu+oVobbzb20sTo7GFaG24/MmS+aPxjShUlfU/mP417QytJ3/SaKyfCqt
CfWrf275i9TM1ECfJtR2/XhP9Pit55pQqWta7rr74bU2lNytv1+e1d6J/swa
2u6vZvFzd9kWTajt+AVqen+vShMqddXbFm4fuqENJd8VGYm8XVKGkp/9vf9A
UUwZSt7B/URt938pPxlKHNaE2o73mqcDg4VxRxEqdd9T4ezHcWUoeSrv2FrF
HmUo+U7uJ2r7fIV8HqC240OZB0O1Y4pQ2/GPmutOBa9oQqXuROnJb71aGdrO
n+N+olJXw+8rKrnX88Etf9g6O3fhoCbUr/nnEm8iudksoVJH3E9U8hS/r6jk
7/g8QG337/X75pY3D2zfd+3+J0KlLnT9SGcmumhou/4kv6+oX/v/33kguWMs
OJIhVOpucj/Rf/X8Yf6eoX6t311cUHq+LU2o1LUu1Z3OhZYN/Vr/FZ8HqNRt
4vMW9Wv9p3wfQ6Vugu+7qOQN5SvhafXVUPLH3E/Ur/17zS/yfQGVOq/3M7f8
D0ZjbPY=
        "], {{0, 0}, {10, 10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {195., -972.}, ImageScaled[{0.5, 0.5}], {360., 360.}], 
     InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJzNlk0oBGEYx4ddKe36ukwiRUmkOPiOHqs4kPJxoeTgK05SilwQ4YCTokQp
FBKFKOSwB9ko5LC1lGQpNTNKaDmgvE/qeWXemvGxNf0Ov/8z7zPPvr0zMbUt
5Q0WSZKC2GWV8HcHX/Pn/WFV0lW7WwHK7+s+6wdX2y5tPgUoRevt2TNn0VUa
UGLu5XrUPdmschS9/1/79qVNr9KpAaVo/z0WbT1gSgNKzDlGnM6OLY0jehub
JyX68Ki06eEShaNof8knr7XNrSpQitbbN3yx6db3/50Qc9bbvvvMCo0j+oO9
/OXkXpUj+gJ3w8N8pMoRvd589frv9osoklM0oBStN+rtliFPeb4ClJgb8RZ3
bcerHNE7ssZGT+sVjuhdbJ6Uos/Xz84DStH6ncCmnDpZBUrR+oUJT3bpkwqU
mMvoaSwbH1A5it5/mM2TEnN+bL9Sojd6Puj5OP9q506eBpRm3d+Z8CxvhitA
iblMNk9K9MFsv1Ki1zsf9Poz+n7T8zUHhS7f/gVQYq7Eu5J7l3rMUXT9WbZf
Kc3q/699+tbcUcCjFygx18vmSflbz2/0/abnH0KP12zSFVBirtLhcSUunnM0
a32ZnQeUmNtl5y2lWesb9aeB/pMTHTdAibmQsI95Uv6X/ofY9wIl5mT2PUZp
Vv9v2ZAsQA==
        "], {{0, 0}, {10, 10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {585., -972.}, ImageScaled[{0.5, 0.5}], {360., 360.}], 
     InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIWBhj4YI+dpr18pvDKm3IX39ij0/j1IfQnG6btPfvy
jT06Taz+gzxdshN43tuj0zB1Fgz6kzNXvMWgiTV/oOWNVG9x/LR/b49OE+v+
lgc5PTMy39uj0zB1iQxqKzXnvsegYfKEwncHx8TCs0xvMGhi3efBfTbysd9b
e3SaWP3T95z6tKTunT06DVN36++WaUw/32HQMPnLu7du2XriLQYND5+7+csn
eL/FoGHyzdDwRKeJdb+yH4/IQaX39ug0sfoplZ/75Ftj04XX9ug0TJ1HvX59
kc5bDBomH11/xejsr9cYNEz+PDQ80Wli/ZcCLQ/QaWL1t1UuYgvjfWuPThOr
P6wyPp1D5J09Og1Tt7ZM9rnnvrcYNLHmO0LDE52GqSOUfo2h5QE6Taz9hOTP
vVv96UPwe3t0mlrmn387dfviWa/t0WmYui3Q8ESnYfIzoOkVnYbJT4KWB+g0
se7PgdZn6DS1/M9QsOVansk9ewwaqi7mT5rb4e1nMGhi7Y+Cpld0mmruH2B5
y7lBUw74PrFHp2HqaqHhiU7Ty/+U1m+E5G2zX3HVtDyyR6dh6nxVQov4Ft/G
oKll/x1oeYBOw9T1QMtbdJpa9lMqv/ZLJVfbjaf26DRM3URoeKLTg8X9htD2
AjoNU0dp+4yQPADr80F/
        "], {{0, 0}, {10, 10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {975., -972.}, ImageScaled[{0.5, 0.5}], {360., 360.}], 
     InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIWBhj4YI+dpr38i5YJHsw7X9mj0/j1IfSvKg2N1j7/
yh6dJlZ/1cEWVqucd/boNEzdMaOOpEi5Nxg0seYPtPypqfe0+w6/s0eniXW/
bHTQr4//39mj0zB1s8+6PX4T/R6DhslXQ8MTnYbJW5udvSBX8RKDJtZ9Mfv/
skRKvLZHp4nVf/e24OzDJW/t0WmYOnndf2sCnd9h0DB5vvR0I0//Nxg0TH6d
48rFj2e/xqBh8srQ8ESniXX/Qf4VbZ6M7+3RaWL1Uyofz9DEv/fzC3t0GqZO
cIJxNb/1awwaJh8Tl75lsfFLDJrY8CXkvpXQ8gCdJlY/3+m4jt28r+3RaWL1
G/Y6HH8T9cYenYapC/S9e+q7/hsMmljzhaDhiU7D1IlA0ys6DZM/Ai0P0Gli
7SckzzHjbIpE7nt7dJpa5reW3Lm1YNkLe3Qaps4fGp7oNEw+A5pe0WmY/BVo
eYBOE+v+t9D6DJ2mlv9fVNZFpFveskenYeq6tk3Pk/90BIMm1v4fPZD0ik5T
y/0DLc91ZimHbfIje3Qapi62GhKe6DS9/G8Lrc/QaWrZv2x7htHC1gf26DRM
3eEPs4JUjt3AoKllvx60PECnYepEoOUtOk0t+ymVXx7k4H977mN7dBqm7gU0
PNHpweL+xdD2AjoNUxcIbY+h09RyPwBDfio8
        "], {{0, 0}, {10, 10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {1365., -972.}, ImageScaled[{0.5, 0.5}], {360., 360.}], 
     InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIWBhj4YI+dpr389aJ1umv7n9mj0/j1IfQLlZsH6a18
Zo9OE6tfYwfjYwatt/boNExd4ospP6P4XmLQxJo/0PIqAWeCnpx4a49OE+t+
z4WZ9xn03tmj0zB1zOEZEg3X32HQMHkdaHii0zD5u/dli2/XPMGgiXVf1von
HqcPP7NHp4nVv6zItvVCxmt7dBqmjlGb4cmx228waJh8juaCyROSXmLQMPnz
Zv4rp1i/wKBh8hHQ8ESniXW/x5pQDckd7+zRaWL1Uyp/5N738wqBj+3RaZg6
oaTAjQnpzzFomPyrCVcKnA48xqBh8sbQ8ESnifWfDLQ8QKeJ1a91MdLBWOe5
PTpNrP5O44/nZf6/sEenYeqWHntwQVrhJQZNrPnHEiHhiU7D1DFD0ys6DZPn
g5YH6DSx9hOSP2p31lRxynt7dJpa5uusTwxmOf/IHp2GqfsBDU90GiY/B5pe
0WmYfB60PECniXX/Q2h9hk5Ty//82z6+4ey+bI9Ow9Rd//lom4D2cgyaWPuj
oOkVnaaW+wdavkPV1j5qzz17dBqm7h00PNFpevlfH1qfodPUsj+NteTz6Rs3
7dFpmLpwPd8ovg+XMGhq2X8KWh6g0zB1Sy5Aylt0mlr2UyqfeGD+20el9+3R
aZi6wyyQ8ESnB4v7V0LbC+g0TJ3FA0h7DJ2mlvsBo/k25A==
        "], {{0, 0}, {10, 
        10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {1755., -972.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.}]}, {InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIWBhj4YI+dpr38Q4Oz3z8dvWOPTuPXh9D/krtl/xX+
u/boNLH6o5JjwzvXvbJHp2HqPHm+ve3lfIxBE2v+QMv71L700Lr12h6dJtb9
L1qK1vpPfGOPTsPUHWlO0s27+BaDhskHQ8MTnYbJW8zMq1Ktv4pBE+u+60lR
X2xm37FHp4nVfzjLOzU37bk9Og1T91+An6lc6hUGDZN/GGepVLDkMQYNk88+
mFTiOvUhBg2TnwsNT3SaWPdPLik4w6/0zh6dJlY/pfLVfVGOkf0X7NFpmLqL
p4/tP3b+PgYNk1cz9nXo1LmEQcPkheMh4YlOE+u/pdDyAJ0mVn9w/TrNDvP7
9ug0sfrXK95e/LvwkT06DVN3+fTHJXyKjzFoYs13PAMJT3Qapm4FNL2i0zD5
vdDyAJ0m1n5C8jWrFJucb7y3R6epZX7/rPN/lqSetUenYer6oeGJTsPk+fsh
6RWdhsmfgJYH6DSx7r9kCKnP0Glq+Z8hZ0Kw16xd9hg0lczfD02v6DTV3E+h
/LYZ9xsbXF7bo9MwdWXRdrJT+99g0DD58PWON4zLL2PQMPmYBEh4otP08n9P
PKQ+Q6epZX/rka1r33cet0enYeq4ZjM1xrbvxqBh8htjIOGJThPrPr7VkPIA
nYapO9MAKW/RaWr5n1L5O2sEfnhPvmCPTsPUtR6FhisaDZPXnANJr+g0vfw3
qxjSXkCnYeoyZ0DaY+g0tdwHAAZnUIs=
        "], {{0, 0}, {10, 10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {195., -1360.8000000000002}, 
      ImageScaled[{0.5, 0.5}], {360., 359.9999999999998}], InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIWBhj4YI+dHv7yn2Tq5/VdeGqPTsPUrUu5nZfz7wwG
jd/cweM/h3U7PV/zv7BHp4l1/1rpefp3M17ao9MwdTvCvY6xn3+NQcPkPWQh
4YlOE2s/reWFrv1n4Za5b49Ow9TNOTj9y/6tTzBomPzK2cGcEacvYNAw+WeF
IUUGxocwaJj8YRlIeKLTxIZPY9TpgN7vb+zR6cESvgwib2vObl9sj0ET6b60
uZDwRKfp5T/j8Dd3+ztm2aPTxNp/Z/uMV7pTjtmj0zB1s941r9KcdhaDJtb8
JTqQ8ESnYeoSDkDSKzoNk7+0BlIeoNP0Cl9ay9u+gIQnOk2s//ZAywN0mlj9
hOTXnzjYVir/xB6dhqkLLJONT616gkFTy35C8ppLIOkVnaaX/YTkfVMmqjnE
3bVHp2HqtmQesytedBuDHizuH+ryQWmQ8ESnYepmlELSKzqN31yk8t8NUt6i
08TqH+zyHjmQ9IpOw9QtOQQpD9Bpavl/WjikvYBOU8t8QvIA0aWy5w==
        "], {{0, 
        0}, {10, 10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {585., -1360.8000000000002}, 
      ImageScaled[{0.5, 0.5}], {360., 359.9999999999998}], InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIWBhj4YI+dHv7yvA8avT9MvGGPTuPXN3jcT0j+TP/y
jWJLHtij08T6r/XIAdcwq8f26DRM3aZS77nd959j0DD5b3ch4YlOE2s/reVt
uc5mHnldaY9Ow9TV+nZUyPtfwaCp5X6Tg5DwRKeJNX9NT4FL+JpX9ug0sfq7
1tx1W73kvT06TS3/jcoPrHxXJyS9otMwdd8mQMoDdBq/uYPHf7SWN3Y+DS4P
0Gn8+gaP+0flB7c8ywFIeYtO49c3eNw/Kj+05Q+shbQX0Gn8+qhnPwDo7AAQ

        "], {{0, 0}, {10, 10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {975., -1360.8000000000002}, 
      ImageScaled[{0.5, 0.5}], {360., 359.9999999999998}], InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIWBhj4YI+dHpUf6vLy07LKg19vsEen8etD6N/LWBL4
r/mMPToNU7cy2uNZivYDDJpY80e6/BJPSHii0/j1IfSbef6bk6H7zB6dJla/
yraMVLV57+zRaWL1j8oPbXn5i5mQcgGNxq9v8Lh/VH5UfijLW02BlLfoNH59
g8f9o/JDW/5lKaS9gE7j10c9+wE3dbpc
        "], {{0, 0}, {10, 10}}, {0, 1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {1365., -1360.8000000000002}, 
      ImageScaled[{0.5, 0.5}], {360., 359.9999999999998}], InsetBox[
      GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIWBhj4YI+dHpUflccvb/uoceLbsoX26DR+fYPH/UNd
/hczB9fH/bfs0Wn8+hD6+9Z9ums55409Ok2s/lH5UflR+VH5UXny5FufQMpb
dBq/vsHj/lH5oS2/uJkT3F5Ap/Hro579ANlRnMU=
        "], {{0, 0}, {10, 10}}, {0, 
        1}],
       Frame->Automatic,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
         Automatic}], {1755., -1360.8000000000002}, 
      ImageScaled[{0.5, 0.5}], {360., 359.9999999999998}]}}, {}},
  ContentSelectable->True,
  ImageSize->{579.3359375, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.699998900867217*^9, 3.699998945526307*^9}, {
   3.700001555335806*^9, 3.700001580676322*^9}, 3.700001660653626*^9, 
   3.700001745909501*^9, 3.700001949991146*^9, 3.700057595746003*^9, 
   3.7001342296683197`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQe8JUWV/+/Q792+9w2IwAy6ZASJBlQEA8FADgoIGMjCBIKS0yg5Z8k5
pyGHXVcGJC5xV4bgCiKwC4joLsb/Kq7KTP/P91RV3+q+fcMLMwzumc/n1bxb
r7rCOb9T1fek2nyXA6ZO+tYuB+y+6y7LbLjfLvtM3X3X/ZfZYO/9pCoZV6vN
98VabdyTy9T4PavVQtH6tz5FXOMrakn2pz/9Kfvxj3/MT22qlkn2k5/8JPvL
X/6ibRpaJtn/+3//L3v22We1xRTf7vnnn8/+9re/Fdr99re/zduF/n72s59l
s2fPLrT71a9+lbeb7Nvx+eWXX9YWTd/u9ddfL447jo/jsldffXVcvoh///d/
z+68807+l0Epk+yWW27J/vM//7Mw6OOPP57dfffd2mKKbzd9+vTsv//7vwvt
7r///uyhhx4qtINIV155ZfbHP/4xn9xtt92WPfHEE9pictTu6quvzv7617/m
7W688cZs5syZrf78Iq677rriIn7605/q56n+QR76j//4j8Lk/vVf/zX7+c9/
rp+m+LpHH300+6//+q9Cu3/5l39RbsT93XXXXcrJuN0///M/Z//7v/9b6I+6
MgK+//3vB/i4/sZl//RP/+TnPx/TX8W3hPRnn312dt5559XqWib6GZ7HPd58
881t7c4999zszTffLGDgF7/4hbJSfqQdZZK98soryso77rijlsL82iC/Z3/4
wx90iv/2b/8G5fI+oFqAwxa+btasWcq+Bx98UPoVhtcGlGqwf//998923333
NNtjjz2ka/k123vvvVVcHnnkEYidd80jAUFb+rq33norO+OMM7ITTzxRuj7p
pJOk7oQTTtDlgozxEaGrGPI///M/BYYIpdsYQp30FTPkH//xH6sYwkz23HNP
ViCzoUyyvfbaS4kY93jaaadp/T777CPtKJPs29/+dg63sOKXXnpJcQ6e6x73
bBpXXHFFds455whDhI1CNfk9+/Wvfz0shgAzkRfp96abbhKGAKbrr78+W3fd
dbOPfexjafaJT3xCuv74xz+efeYzn1HiefR3ZQgEnTRpUrb99ttL1zvssIPU
bbfddkoWQf9cZshZZ52lcBKUyWwoE8jNrlbo8Xvf+57WH3DAAdKOMsn2228/
3RVjhrBrsn8IE6QdZZI999xzuhGdf/75wpALLrhAqCa/Z7/5zW+GxZAf/OAH
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
sTaxNrE2sTaxNrE2sTaxNrE2sTaxNrE2sTaxnhfE+vXXX2/4TObg9x0Ua3WQ
SvqQbZdO12XQhxt4TZRlG1CLfAswKd39DgC7LNshlixeW3DlC25RTD9kkVda
NXoIc58+KUWJvuaaa9Ls2muvlaYi1+GGgoJEQ4C77rpLFkXpiBTibbuZrNmE
yhdAIOFAtmyy7leiC7IReRbyr1q8Q1hpENsK70WpChtgfClJ8KkE/WXZRZzK
0fFxu+AmVyVm7AXFeNSeUe/I15BnddsChuIFgFQkJ04IzYLKJwdOUuV2LKrs
ytY2Wq0qH/lA7qDqBb/KLU2dHh1ZKtagLqQtCWFX4NhPo8M/3BISTkQ+h/sY
0mg3YW254HtJCrH0nXOWD8Y5yytdQVmjc4Zze2h8xMS7QDgB6n77rDpRkMlw
CUV4YyDHfji5g7Czo4T7O8Lug9tM2Bnq0X0QCFu+Afgx2CxaedHr2p/Pd67/
OsTc/03v0HBkhnzl6UO+t9wdK9Jpa8/1LxU5OWDFFVdcwYuDtKN0bw7Tp09X
SU+9iwryf/fdd2uL8IYhv2c333yzJ1Frr/D+gbn3K5DnzoXWTc+D+tnnSg97
Q5UrqnczrQUX0xiX4Z6i/6m4XgbOV2WI77Z1dNsS2p1Ie24JrH2oYtqLR5Qv
HzMso3zMAPryq2a/G0F7Yo2BcJFOt41AANbsMnMWDpxl0dIrpbucqJyngc+0
i10h+dyv+BdTbgzGKTc6ij8CHcDivbALYAH/uFi63OGUDrOcjbwSNPyLAS/9
4dKe1F/Vg/iHl/l69DLPmZlFZ3J7GnZN2l7I799BrJ3YOBzG7/9h+gDh/PPP
zy688ELplDLJLrjgAhXhe+65R6YqQip13JVNn5dcconUXXrppVInv+stQm6n
ar2ss9TyllBMzT6on31qGxNXE9cxE1cHFvfiFwV6FMQV8XSpXpxHNJgda3Et
Zp1SodXvBX2Jq8NrHIYUiyviedFFF0mnlAlCqyesnIAyVYQ20dOQN3sENc0u
u+wyqZPf9RTuR1yLmagG9bPPpGPiauJq4mriauJq4mriauJq4mriauJq4mri
auJq4mriauJq4mriauJq4mriauJq4mriauJq4jpccZ1Vvj1iQg+ZRabiJfF5
NDLL8yK3Ukc5qHMcrsyGBTRzf7WQnA6RALLcteFu3HAMxFkJX8KG9yjEnXI0
0lu8vERlODjVDkd6gxNiI3daG/KuSJAFub344oule8oEaVZXJhyTUnJ6SR2Z
vnCrRIJTcgVJnfye3XDDDT5JkvP0gghVcsweIM/LGJSD+hnCdJLj+WJqs1eW
/RljaRvejT2uXTmNYFtSu1rrkg/nQxPdNNKG7uC82s3pmU8h52SVN2ZfDs5D
3pOPJRS46jeq8obGw4UkfurfPd4/EclzZbrSwABG6ubdHHtB+6XV4sR1fi+q
xZEBfgW11M+Fz0WhdZuA32qdF1Ccg3KWy/RZcwnfBmP6dc2LGZwNQQonIW6L
aclTOXZ/ZmLIJv7AqfcK5h4V+Mz+Vfe7GH0h184T0aEPVAUZTn1+MMaousml
kGxTPb2dP2bsjdntxqFmhC28kWPvZBJq4ZQZ4xLCUof4NrR0+CX2QX7kWUoH
CDwTY59kAFL2subzQw89pHkcG4TB1Jz3dHmt7NiAouUNPlDIaVryih7vp9vu
hNz/JlCVb7M/R+ck50CUIrI9q2zgR2/5d3VVolo1obaJD1Wc2nFGxvKLSryF
teI7Ogc9lOW/JdfUlWWzSv5Dns0mZTPKaFk+pUOn5Zusgpdu061XVtAtkClO
ihzn3gxZ+YLUhWu/ypJNrkzO4AZlo+SbHNMAKoaX89S/nCPy5W2cyZQPnPgN
unPkUlmcW1DpFtAQnuW9jjpcOJuUIVqBY5a3/rgxTMJ7mZf0un9V5zMd8B2n
EV3+Vk7Cy3EeuKDC2RanZCJrIjsCkQ1xhmmXOMN3jciKoGYzZswQ6aJ0p2P5
LkxEljq+/TcpG/4rAooBHKTjxmDPRNZE1kTWRNZE1kTWRNZE1kTWRNZE1kTW
RNZE1kTWRNZE1kTWRNZE1kTWRNZE9t0nsjXnkhFcS4KnAv+6u2m0hA23jLKw
9ZTgWjG9Vj26HdG7utTia0H7E+ieVyl2kuqQky4IYFVOOtCEEwZuBo045yYc
5Q+535YnNp3EWwXbRL9SXeBHr7sTq0S7LIUi4CqxZdGmziWaa0l11f2Hzz77
bMHzB+mlT3Ld1H3GGz7jylGW9KJfX+uyyTxB1Xxdxf2v5VtBS6BfOAJ9eaiQ
byv3ZqpVe1fSpuB3VRqjc5rInt6VsbD3WkorV13NuSyF62MD7hk7bEsNvy1V
uV1WrTseqB7Jpd+BanpNqawH2kTyXyX+3qFPvcNaHQXvsNi/qsrxEv6X8VB2
vMQ9kYnFiT9DcsPy5lAkUm/Hy7ADxIkZy2dCnPlJ5aXp93ooW/bDxKeJHcD5
IblbZf2lgypW9Ui48Gtir2v4HS94k8aLAiLhnaDuS3YT+gz/urpluTpoUz7D
4leGeHMOqAzuy7hRVXlpXnfddT7LJ3l8XZ49ZD7OciWtNSmd43vLzQ0S5TLv
+c4+hfd2XctB/Yy7avhX9tIc7qYAhspvGtCkzG9/OLV5MvazKYDL4sY+rE2h
LSFuaZiFfDtknO00flv26RZ9ykX3QuBTNhZcJ4ezH0CGlr/zQJ7bsPd+IHOP
na55/YldHTlR2azii4f5DEHiPQKYV8l+ldM16Y9bFxS7+7X7ln296TzcUg55
OOnkXVV6o3SOTIX8sn4VVSckmwCbb8NvwdEt3/mMQSzvzIQN1H354x//uJ+0
dLFgV222VeCHPWeffXZ27rnnykCUSXbOOedoqjrnH+72L5aJuzXJ7FIfWkGo
Ba7W3CMd8k/zmsQXm3guvLHdcccdKqh1LQf1c7dUdSbEJsTvbiEeYW7JshAX
bxAvfvGLhRihPe+882QgygRR1rgn3C1DkAeoxOl6pEJclW+yW9yTCbEJsQmx
CbEJsQmxCbEJsQmxCbEJsQmxCbEJsQmxCbEJsQmxCfE8KsRBEN5VUktH7y6p
BT5/Z1ILEqpsSp2kViRV6tw1SVybNNeldrx3cwqJbfhD3Yszn33mqVq427RN
dIeG6SMyhrKqyWeC69pfKy5Y9b5XBR+RKvkdrY9IkUgdUnNVyO8E52jmOmdA
VuvYT5moPFfJb7/+IFXyO9zkee3yW4WjZrSNl9PowdYqme7XAaRKpqsScfWR
Rq+TTDcovcuO8zPDHaMqod4111zTJslk94kT6nGRWScXj3gGbFjDTcSlbrnB
kY7G+JO4LGBucMzXe++9d7bTTjtJ3S677CJ1O+64o04gyjnm+BgnzlJvOj1N
Cp6CvVw1F4nISZayM844Q8Y988wzpe573/uejr3NNttIHWWSffWrX1X/mXwu
4z104hRaqZvk7Na1pO1W/dbdrV3kLH5DlJllxx57rDx+3HHHSd3RRx+dbbHF
Ftmmm24qdZRJtskmmzBP7/LlNnr2nOCeGV5N+OzvLnbtWpfADuVOe7XefpZh
fmwZ06ZNyw488ECBwkEHHSR1Bx98cLbPPvtk66yzjoy79tprS91nPvOZbOut
t/aJDt02y85RdYc3ztT5PqmziqFf9P0djO99DtJTqxKfMGNG2GGHHRRndS2T
bOedd86+8pWvZMsuu6zM7gMf+IDULbHEEtlmm21WcMpjsw1u0+FExwuaG5Gd
P5YTwnDaQOWmE9HWRlbcnQfCBIPUxEIz0T+GUIJJOaLlMUr3Ug1GN998c6n7
8pe/LHWCBXUxi7lW5S8dHwgrjUBeOPIFhTkijznmGB3785//vNR94QtfkLr1
1luvLRVh7JMXLnCO57JiJAndQg1i6TjqqKMUfalH3/7775+ttdZa2RprrCF1
a665ptR98pOfZFZ6RsQ3aFdJRzh7Vh6mJLDj77HHHtmkSZMEG5MnT5a6KVOm
gLBsxRVXlDFWWGEFqVtuueWgk5fAFo+qJCHQL8yll69wmAt8ZEcQ/MpcKJPs
S1/6UrbuuutmaZrKs41GQ+rmm28+lcy4vzg0IMY4Hk20WIWyza03IPWWW25h
D+XlUVZCmfAlUCUMjKbZlltuKXWC2rmCVI5Ct3cef/zxUid41bG/+MUvSp1g
VOo22GCDuYJUpET2Rhn3kEMOkTpBLXtk9qlPfUrqPv3pT0ud4FUlZ04jda+9
9gKdwuGpU6dK3e67786Zm62yyioyxsorryx1glfo5CMjsvw9dqyRyi4r6JS5
UCZ6tiEhQ0ND8uz48eOlbnBwUKU67o91GVINqYZUQ6oh1ZBqSDWkGlINqYZU
Q6oh1ZBqSDWkViP11ltvVXMn7gmpd1IALbvuumu21VZbSd3WW2/tZ4Mpc04j
FQMNGE2zE088UepOOOEEHVvQKXUbbrih1G288cbDRqqPcZaqRUeAWeTl0EMP
lRlMmzat5vT68Oazn/2s1AlHak6vL/Nrw6wPx6+FUHw+B8xqu/HxrIaD3m9/
+9sgVri+xx57SN2ee+6pfPvwhz8so33oQx+SOsFwtv7667ehF5M0mR5Sf60E
aMYvgBZNR6v2uMvgqDAcWKNsFQbKJCkTQKXitMACC8iz73nPe6Su0WjoFhD3
FydvCOZF7OPlvPu97PoTu8IfOx1ZYcgPk/osMffcc4+KwGmnnSZ1p59+utSd
euqpOXnCbVexBbXqVqxAhV7wD1QlWw3eAzfddJOMS+ngf8QRR2RHHnmkUIEy
UTW/d5SIABTsKhhcul1IFWbVL/xZJUHxZevoQQcdlO23335St//++0vdvvvu
m33nO9/xF8tk3gQZh+r7fCi5YThObhRo0C/8+XzWWWepqbKupTNVnnzyydlu
u+0msxJBqDlzFgeMMz/prNohkkZLxcaK40Y9ct9gZ8+hNAz4Y7074IAD1BoT
WwS/9a1v6U7WyDbaaCOpQxyoK8O67Jb4t9atNfmcQ0aiVo4Bl5EoXE2zaFf4
0wq4cyNVfC8V91C5dxfnAMMJgddBDP/4IqVGhXvFcOHPPHhvuu2222RcygQR
5DRADGR1lAnnQvApqC3pnwXwxbQlowc9onjllVdKf1dddVXNWeW/+93v+nOA
MuENRsUR0Ae6gCzvTiZjOFcyPD5GA3XeHeFH3Vs8cUjCFs6+n+oZ4CxsCCD4
DnSJ0/TUo4xegR/DRTSnrqyccWRcyoRNQDd5917rrK9Y3LA+xniBZ8W7BxP9
HBJyjQyp3HzobMHuLZtN4Z1AKgcEbwm8u9T9Wzab9zuFVJDA+3V4y2bfkeNj
riAVfsRIlSNUMZr6t+zJkyerp8ScRirSyfta3b+1QROOKfwEGv4tm3dJEFxG
Kn3KGuVZSjeGd88zpBpSDamGVEOqIdWQakg1pBpSDamGVEOqIdWQakitQCoK
c0FnLUQsYBueG0glWuLWW2+VcSmT7JRTTsEOrLEKdR+xgH51TiMVzTVIFXRK
f+A1yS6//HJFgrMFUyZqVMDcMSeRytqIGIEfdS2dfhtdMxhN1SKcEL2gus45
iVRMSkgn2uS61ylDE2KGiFVoKF4T7ASK3tEjteZy33vTbc2n+XfGK/ISg9YH
HnhAqECZcNm9xoSVw1wD18cSvUxoyNs64v5C8KbIU56KNdXS7fmgWvZgoQKl
sxr4AM45aCDTmTb91OiQY+G6666TTimT7Nprr1XjwOGHHy4dUDphI9gr77TN
SuYjWWshJBqrWb9Qp84FfWngpJsaVnE6Icd1qnx0YZBgXnAmdXvvvbfUYYHi
lMhNZePjeDP4gS1MfoTOlIl6rviU3X0hf7ZeINCaVfliAPoSMrUZO9nLt912
W+mP0pmQkcx4jLZQ0DBxgFC+B4TPgK6nmOBH4U76O++8s+bsFdDtpJNOkrqT
Tz7Zn/SgN4/Ti1aHH0LdeyPwuWwurqJC200frSDKHlGdA7kksUCBXzO7/vrr
PepgrRBTpkPpQifZfuLpMJWQUL3uA/2oK0eFxzcMNLxbQ5tBdai7s8VALkyw
TSSmoTnWXXb1sp2NMwFzcby7VMkxdWWrKTQP50dacX54Gnf2dmiXtgElMAc4
249sN8FNgJ2IvRuJiuUKVLuztHUFBoSNo72Ze/CmqXtvGkjDLkgAciOySAep
a5m0A6Hb5W9A60LeB3nfCRZ7TNO4kHz961+XiVEmCJgeSC623iEAIpe5zaEa
xK0e3RLDoSRHiPR3//33+y07mKJjUS3nHYlN29UeG14iSbkAqNPsxhtvlLqb
broJadTtNQUnUgd6gs0+flcuDxrDveqenSWGJXOcTILgpveR4IUTCrtwYEr3
egP0eDDkm6jKPxRnUmlU3JnT2e1usCBVfEEqv3YCz7322kvmROmchpgny1fE
NyO5ofM4dUp080QXfzsnHqANW71sNClOf9KUPeib3/ymhrSHwHaCQjEVgyFl
ViPCPnLC9RCN6F3L5wjo4mPXQjweGLvttluqoajuywceIfLiL+NTJuochRtg
LvGNCM7sOQT1p6zIrzW8X1X71XmYkk9g+vTpuR8PL+L4pgDQ1B9thx122DsA
U/KMCC6avH97WcFBpuyjwo45t2CKt0n5ezxvu7I5yZwo3S7KPNmYxhymbCCC
0FR9ZN07h6BGXYiCIxFeoYgJ2JwjMBVshm8e8i1ExSTOaoBnYfARiv0lqzZh
UAte0+jas3A3kqHWUGuoNdQaag21hlpDraHWUGuoNdQaag21hlpDbTfNV1+o
xWCIajYFrzUXCo2DBFaHVFPlOXU+AYddUTtUYQ9Rw0Kcp7FPwGK3Eaw21QCd
qDoegOIeUfdOEhiU+gHsWNg+itDFEF4OtkIjinGurmWi6UCDXr4NuuXLw1lG
KcJUZtg5wrQFYrYXwW+cXhOdKdrToEMlwBQ9dkcQY6VoRBbC4JfQb8Bm5yDT
ItgF52kUts28MJmnPskfJnOsG/2AHasFoXPBZQPXCeA0O7qzmH8+KC+3g/Vt
tSAWW1heCzmyiXm67bbbvCWDTT7RIMtgW14yB1GH/dzfaV3YNqP0n13M7S2h
QJEtjG/6cwnPIWxv7qZjZ4sLV2Xz4OK57HWYU3zffepjPGPGdjast+QBCiOs
LgbW7SCYeJAJEtLWo7S0uBthWl3KEUuN1a201wQ4E5jf8OH5/nLmAsSq7Ogc
z8wOK04jysZP2gKX6NPtYdgyCMEDRcEJIsZX0xmh3YQwl3GTNDdL17VMNE8y
OY9z8PTAPJOaNm1aCLvj0GVHiGWTA4aDJ4dQrTqQlCGC2bnut1lohli5Nw5n
XBN4qgWPnrrayQnKdjngXf4BTgpeEtxB4F5f8P8JG2w41atg5FNxF3KWDxfa
hHXffffdTSRZml599dX6gsDrSupfWmJor9BlOiA63AxQ9+ZjllHGUi9Uk+hZ
zsJacMXiXGyFdbqXFlCOawao1uQJAT/sq7zmvfLKK9I5pYvYHw6gOfqCjZ2b
zvFYdDlB3BsLmz0GQsAb+MPEgxdO3dvdIRBjuBTalC6MPuSb6BfLAuCU91d/
HnP+8uoSXmDYz5G5GC5Mp+yfAGmQdeda5pwgOVFZtuHWcNuGW6G/PEvpPM/m
Am55tBNunfOucNofwbyKGW4Nt4Zbw63h1nBruDXcGm4Nt4Zbw63h9l2IW/zC
Bau5Um369OlzFbczZsxoAl5pSiAXPuHxZWNzG7ewDL1uquh1Vk3C8eLAUYx3
6FznCG4R14ZGQ7k4KOIhcU8PTuooUFEvzy3cfuc730kBb81Zcwl24sqk1F+c
hBEPUeoXtyPSg2FsFKzm+jwwxYMu9un222+vuUyxIXihG27HwjRByMh9993X
9FEkiAy39l177bUyDGUS2NsTt1glws2QdR9TxzKGi1sRIw0CC4GHHEeE9ZZv
F4TmlbgdjUGCSRBU2IiivDGqnnLKKTIhykQN0ERm9oNb7BEzZ86UZyld5Odw
bBHMJ7ITEl+G2LhwQmexJKYCc2IZt2W7A6TB7lA2hf3whz/sjdtCGGsHAMQh
XatRFvLtdkOhN/824xjZtt56mHorYkbDdaFxVx+NGBbuSGx2t9qWQz715ksX
agjLC5OsVds+/fWHPdheDOBUs3wz2nTCQCs6wDv7IGsoMyK63a/dWip/Z+Mk
uJrPU/3IGM2CF0QcLhzu4Zzi6zCoVhE+BLaH/jjFq8gYVhz64+2qigph/lPd
/KWqNX/mzk714IMPyt8pXQxwuP039IOw8bZGi8m+Hb4+vFVyQWyIXH344Yd1
l6HFlKgdO0yeZdfPi00i7o8wOfrLg3n9Bo5lO+9vHM3GMefWImAcROMa66n+
sm9284I/gd/RQ7spvl2cjT20g+nh8vDQn4/IL7SD2KHdZN+OrZvgQ1qERYRo
5nzccXwcB0H8IrL83/rvaEXN+RDBQRxppmrpuOXfufLFg5DQbopvByq9eOXt
uPK63B/nkvdDyNtxCSdWdFpMjvojuD8mJpufR48bdxzAH8crbAsRzz77rIoX
b6BT/XsoHZXFEneCp59+WltM8e3CO1fcDmgSwxr3x0tgWSx5b4YwtJjs24EQ
3AH+Et1sCqwZIx93nIOFtGstggvDQ+bwsBfwklGViiAE14a9ADms2lvCS3zo
j8VW7S0BwqG/Tjts4KLfW6pPPORrdrjqdyjyYfH/uvouxe3iC6XL7jhxOx8e
nY/WurO3613foX14s+l1Mvth9KTNvDtHuKqaf/5kzblePFV1NGkcDrH4NgB/
x7l2KrMYn3fvXs4GC7fOVl2fHXiqZ5vOKfYnKofvx0di7PJUTmbhEdBq14wO
5WLjwbhx15t9h3vZffxFIq0402OQFOhZeslIK8aN714uPjtQWI/h/F2B8zJM
fBaT1qLmdZyXc0XEC4hBUhZow7nhPF6U4dxwbjhvtTOcG84N54Zzw7nh3HBu
ODecG84N54Zzw3kMQMO54dxwPq/h/C/lLOPvvJ0oLF5zMut03m2GoVgyxxDY
43OALV3xW+csEGXEhSc0bFx9gSbkdZoooS8kBXAsnf+mdRMdxORjmFCvawla
qdZ9XofZebqBgiOQdj8hl5fQfa+bBlrrnZj/1qxgfCOffdOLb/TX/3OsWCr/
bdRkX8r/tZfkGQOMAcYAY4AxwBhgDDAGGAOMAcaA4TAg0LnEAK8iGA4XZutF
VWHwEhd8z8NlxYR+uDC7qLUJE++DFZ5CXptTa3TS5MTJEwvrCEqU+Il+Lm2D
O1XBMa08iG1c6BBO0zk/3EDMaTQFTa9EqR7Qw1IW5deoQTctr9UClefvgQd8
9dF/aMhLSyk0VByj5iIiCsqbZqTpqRyyG2Tc9/7WzVCFVfqVh9ui0igDY2jX
qGinUVKdtUluplVanzD7Zj77Tu7phr85hb9GdMVZGLI5l+GIxjMJ8QwGR4Oj
wdHgaHA0OBocDY4GR4OjwdHgaHA0OBocDY4GR4OjwdHgaHA0OM5lOOrKhgHH
hSn7MeSNpVUmOF0rRkYDx0Xy2XeC4yznu11r5MwIDtBt3t+eX1I/vsLJu7Mz
eJ/u3sqZbu7e4934OpPg5N2/f3dYQJc4hr/6BHzj3W+KF/mtl1mYOojUzCfZ
K4ghLKvpHLk1a95f2hLhxcgZiXO3249a/RaEKlAZdmHXBriphy+7adlzm2mX
wxlYWhmR8QIa0RhFH/eBOMTBkGnINGQaMg2ZhkxDpiHTkGnINGQaMg2ZhkxD
piHTkGnINGQaMg2ZhkyHzGA7Y9KBAs1+gBqoHHcQONnoB7cFMpUSv3TDrV/y
LJ/Ko1adH6gKgFBuNEAdfhqVgMyW2awKbBNj01yfcXwBc96c2aqLuup9T1Lm
7XgT899aCJrIRHsZDEM0ZcfcOlXk9OlRHG7+5u7j6NhLfK/RLJ+qZeF4ar1C
AuOkPOWtK9pqwtTaDZpVNyv1urIh8Hdhv+nMioI/lcRtRkRDjCHGEGOIMcQY
YgwxhhhDjCHGEGOIMcQYYgwxhhhDzLyOmFoxJ3hKOczsXB1QtHTUfR/p0VoA
KqiEJ7olRLOaEyjqYFSodb6tvICiwvzmGJTKGl8GKfDNt+sXSoWlVgcJjPdz
5fFy8EJskgi5wdssCf7ZQK3UL6fN4lFq14iB2964TztHp8eLc1/It/tLOeG7
fzaQzttt1MIVzS5ecoBZX5CvIlcwDjA/7BIurEVKv60KQ9U20xlDgwVLVFUu
+io5CetuRNAq04d2VZa1KptKle2lQMcwoVltyeQHdUHhX7+J66tkowxOJkCs
kPxIO0p333wZsPRVXihz7Cd6h7qitWagsB6TL5Mvky+TL5Mvky+TL5Mvky+T
L5Mvky+TL5Mvky+TL5Mvky+TL5Mvky+TL5OveVe+QmzLu0KgAmrnBQkKhPPS
0wLWOyhBCsDmu1FkaPduEZlaMRKs4a3TTP/3v/89P7W6lkn2u9/9TtvFPGiT
qqFozu1i5P7av9x4+DlS415QJitzL5O1Qnj+6sO8qoQxLKVf4YmfrUdQLCMD
UvkpS39Saghma0VtAlXsoBh92a9ABVoE5wkmEULpBqNEitTB1TTiLbQFSHHG
xrBQdemJMzF2FLJiCGZxW+hXyKoEpSzpgP+3v/0tP1JHmWS/+c1vdCWIUiPa
OQr7ZNMvj4n2K2nFwbvGlYatFCzfdddd2d133y2PUSbZD3/4w+z444/PDjro
IKk75JBDpO7AAw/MXnvtNX1qbf9sLxefCVHdAw88kD344IMCRcpEP59++unZ
scceK2Mcd9xxUseY0Coeo5cHWQjaZPnU33vvvdLffffdJ3X33HNPdsIJJ2RH
H3201B1zzDFSJ79nJ598snJ9nQil3ZyCwhiw4vvf/z6klHVQOmzcfPPN2cEH
HyxjQLEkO+CAA3Qtb2tkaeazsq4SoekvXVx8wmhQ4tprr82uu+46GY0yyaZP
n55ddNFF2W677SbPTpo0Sep22WUXqNhCp24hq/Jbm0tO4PoTTzyhKxTOy6wp
E3iv1Nl3332lbv/995e6ffbZJ3v11VdHxHXGED5k999/v8yfMtHPp5xySnbk
kUfKGEcddZTnyGi4LniC09Kf4FbqZsyYAa+zww8/XOqOOOIIqZPfFQkj5bqQ
MbvjjjtkHZRJduedd2Y33nhjtt9++8kYUCzJ9t57b13L6Ll+9dVXZ9dcc42M
RpnA++z888/PdtppJ3l25513lrrtt98eKo4J16GWW4kgV+pkPXOE6/A7VWlM
dMyx5jpSAL9TxVfC73OE68hGqhRzEsJa5hzX4XcDKZe6HXbYASoa143rxnXj
unHduG5cN64b1/9PcZ3voD/4wQ9k1pSOWnPjmxvfm9+Jb258lx4p1+Hy7bff
LuugTOB9dsMNN8yhb25XXXUVnJfRKBP9/n7eeeeN+pvbj370I5Vt6BSoFTgy
bdo0qfvud78rdYceemj285//fERcZ4yHHnoIbsn8KRP9fNZZZ2UnnniijHHS
SSdJHWOivRop1x9++GHFVIoOSOruvfde3U+Ey1InEl5zmiC0QyPlusgFUiLr
oHTtbr31Vk8roZLUHXzwwaxolFyHEtdffz2aGRmNMtFd5ZJLLsmmTp0qz+6+
++5SN2nSJN29hsN19G0//elPsxdeeEFmTZlkP/vZz6CerivIP/MKHFkiX8mi
w+Q/u8WLL76YvfTSS9IzpeM//EGfVvdaNUaHxjy1pFtJNFq/SEAH+/LLL7Me
GY0y0bUymtsTKN2Jxohod5dsW1u/mIBrQtjsxz/+sayDMtHPTz31lJ4Gqd8d
brvtNt2FMAcslXMpjNYvJlDDPvbYY9njjz8uo1G6PZX9TnYIedbtDldccYXu
5Tnfar1v+pnYFTHIvuCkQFV4irbVnRjuPQEajR4x4FNwAh+lZ0rH6/LZwehj
gxhmJeuR0SgTXSujxfsiWl9GHD1ifvKTn2gKxrpPxMjnp59+mjNFRnNvEYIb
xejoESM4ASUyGqWjOPIHVhr+LYLzhdkaYgwxhhhDjCHGEGOIMcQYYgwxhhhD
jCHGEGOImbcQ00mDJyPlGjy0QGODmDmvwQujMSPWghzU57gGDx7MPQ0e1Omk
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
h0WM+//5gvOv\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot weight magnitudes in two layers", "Subsection",
 CellChangeTimes->{{3.700002818338657*^9, 3.70000282573601*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"layer1sizes", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"magnitudeVec", "[", 
      RowBox[{"1", ",", "#"}], "]"}], "&"}], "/@", "pointList"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"layer2sizes", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"magnitudeVec", "[", 
      RowBox[{"2", ",", "#"}], "]"}], "&"}], "/@", "pointList"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{"layer1sizes", ",", "layer2sizes"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{3.700002815749415*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Ls+rL4y6+ZTe6iAQ9f6tG7pxJdQPoeDCFOz
M8eVd1C+gEOf7iYlG/aPUL6Iw5t1Gr98n8D4Eg6n7/LXcqd9gvJlHNLLP7G5
7YbxFRyUxFc5lz6B8ZUcLPPNGM0vw/gqDp4feX2N6mF8NQeH71mW/Ldg5ms4
sKsZr3n14AOUr+UQOVlkvV7Jeyhfx0G5LnnRu8i3UL6eA0/Cze6NV19D+QYO
jAmbPG88fwXlGzqkdu13PJIE4xs5NC8Nq1wgDeMbO9y6sWZX4TdYeJg4fEor
4LZ6/NIeAACfWu8=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7C+cDZF+Z/PeHirgsKou0/GeGYzP4cB564Bp
fRKML+Agyph0UXofjC/iMNnCZdMkmQ9QvoTDxw1THLPjYHwZh69a+QnHJ8D4
Cg4perYXS6bC+EoOb7XTqhhTYHwVh7KjXlvWws1Tc6hbJzCpeyvMPg2HGbN9
uUUDYXwtB0Z3ga+/FWB8HYdNQmycT2xhfD2HA2GZDrf8YHwDh7MCtyPFI2B8
Q4fC1wZZX2JgfCOHb04nn1fGw/jGDqJMaxSPJcD4Jg6ZPpubChLf2wMAweFY
YA==
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.6579149464867627},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 20.}, {0.6828130868666602, 1.18077589446461}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.700002816048431*^9, 3.7000575985259*^9, 
  3.700134232733844*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot update per layer", "Subsection",
 CellChangeTimes->{{3.700003082783553*^9, 3.700003089420795*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"updates1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"vectorBlock", "[", 
       RowBox[{"1", ",", 
        RowBox[{"temp", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ".", 
      RowBox[{"matrixBlock", "[", 
       RowBox[{"1", ",", " ", "1", ",", " ", 
        RowBox[{"preList", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ".", 
      RowBox[{"vectorBlock", "[", 
       RowBox[{"1", ",", 
        RowBox[{"temp", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "20"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"updates2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"vectorBlock", "[", 
       RowBox[{"2", ",", 
        RowBox[{"temp", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ".", 
      RowBox[{"matrixBlock", "[", 
       RowBox[{"2", ",", " ", "2", ",", " ", 
        RowBox[{"preList", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ".", 
      RowBox[{"vectorBlock", "[", 
       RowBox[{"2", ",", 
        RowBox[{"temp", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "20"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"updates3", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"vectorBlock", "[", 
        RowBox[{"3", ",", 
         RowBox[{"temp", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ".", 
       RowBox[{"matrixBlock", "[", 
        RowBox[{"3", ",", " ", "3", ",", " ", 
         RowBox[{"preList", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ".", 
       RowBox[{"vectorBlock", "[", 
        RowBox[{"3", ",", 
         RowBox[{"temp", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "20"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", "updates1", "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.70000318464629*^9, 3.70000325097761*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7L3U4pZlv75vDxVwOPbQd+kXvltQPofD5edm
y1W/XYPyBRwKpnx/tG3iFShfxCFiZtjBLpVLUL6EA5//KZu1y89B+TIOZfEL
vhtbnIDyFRxaJ/oGvjM6BOUrOQR8trVvct8D5as4BO7TkJtzdRuUr+bgrRDz
p//mRihfw+GU19NWqQ0roXwth5wZmn2lyxZA+ToO6u3ZQQeXToby9RyWF7ux
2hxqhfINHI4YdTHoWJVD+YYOgfe89KK8M6B8Iwftd+EMzYqRUL6xw79/Pi9F
bnhC+SYOn+6/W8VQb2UPADadV2Q=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 20.}, {0, 0.4987439274487754}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7000032461069803`*^9, 3.700003251552055*^9}, 
   3.700057600740404*^9, 3.7001342352528887`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", "updates2", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.700003258444854*^9, 3.700003258519554*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7EvV4pZlv75vDxVwOPPQd+kXvltQPofDhedm
y1W/XYPyBRyapnx/tG3iFShfxCF0ZtjBLpVLUL6EA4f/KZu1y89B+TIOmfEL
vhtbnIDyFRzKJvoGvjM6BOUrOXh/trVvct8D5as4OO3TkJtzdRuUr+YQoBDz
p//mRihfw+GI19NWqQ0roXwth7QZmn2lyxZA+ToOFu3ZQQeXToby9RzWFrux
2hxqhfINHL4ZdjHoWJVD+YYOFXe99KK8M6B8I4dF78MZmhUjoXxjh4b/Pi9F
bnhC+SYOYXffrWKot7IHAHLnVy8=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 20.}, {0, 0.49874392744877777`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.700003258765863*^9, 3.700057603473814*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regular gradient descent", "Section",
 CellChangeTimes->{{3.699998651496395*^9, 3.699998655049646*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"optimizeRegular", "[", 
    RowBox[{"lr_", ",", "w0f_", ",", "iters_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "wf", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pointList", ",", " ", "gradList", ",", "preList", ",", " ", 
         "lossList"}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"wf", "=", "w0f"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"iter", "=", "1"}], ",", 
        RowBox[{"iter", "\[LessEqual]", "iters"}], ",", 
        RowBox[{"iter", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pointList", "=", 
          RowBox[{"pointList", "~", "Append", "~", "wf"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"gradList", "=", 
          RowBox[{"gradList", "~", "Append", "~", 
           RowBox[{"gradf", "[", "wf", "]"}]}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"preList", "=", 
          RowBox[{"preList", "~", "Append", "~", 
           RowBox[{"ihessf", "[", "wf", "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"lossList", "=", 
          RowBox[{"lossList", "~", "Append", "~", 
           RowBox[{"lossf", "[", "wf", "]"}]}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"wf", "=", 
          RowBox[{"wf", "-", 
           RowBox[{"lr", "*", 
            RowBox[{"gradf", "[", "wf", "]"}]}]}]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"optimizeRegular", "[", 
   RowBox[{".5", ",", "W0f", ",", "20"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<~/git/whitening/exp/data/natural_gradient_multilayer_losses_regular.\
csv\>\"", ",", "lossList"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"lossList", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6999986641339006`*^9, 3.6999986860195017`*^9}, {
  3.699998847150424*^9, 3.699998850071939*^9}, {3.700056214134197*^9, 
  3.700056220468603*^9}, {3.7000752500723057`*^9, 3.700075271492931*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7LuME2vrTK/ZQwUcnjw+tdbl5RMon8PB4fP5
O8/UP0P5Ag5XXgSnalx6C+WLODSWlwh26L+E8iUclv8UaLHYex/Kl3F4uti2
osj8AJSv4GBzsqlYq2c/lK/k8Gt//4+UNwehfBWH6F0tBTETYerVHCqE9was
qjoM5Ws4aDneF4pkganXcjjhc3tvVPQRKF/HQelu09dbGjB5PYdX36+nP54L
kzdwMDV192TTgskbOhS18f2MnQmTN3KYnJLxaIoCTN7YwUJO8JFYA0zexKFz
iy/nTZGD9gB0UlsU
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.703125, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 20.}, {0, 1.1972416520577127`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.699998679394189*^9, 3.699998686371147*^9}, 
   3.6999987466920147`*^9, 3.699998802888177*^9, 3.699998851028626*^9, {
   3.7000562115392113`*^9, 3.700056222379306*^9}, 3.700057605835108*^9, 
   3.700075239656262*^9, 3.700075272542485*^9, 3.7001342408342323`*^9, 
   3.700230939789612*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate data for TF", "Section",
 CellChangeTimes->{{3.700068342450616*^9, 3.700068347092957*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<~/git/whitening/exp/data/natural_gradient_multilayer_W0f.csv\>\"", 
    ",", "W0f"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<~/git/whitening/exp/data/natural_gradient_multilayer_XY0.csv\>\"", 
    ",", 
    RowBox[{"X0", "~", "Join", "~", "Y0"}]}], "]"}], ";", 
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<~/git/whitening/exp/data/natural_gradient_multilayer_fs.csv\>\"", ",",
     "fs"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<~/git/whitening/exp/data/natural_gradient_multilayer_loss0.csv\>\"", 
    ",", 
    RowBox[{"lossf", "[", "W0f", "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.700068357966646*^9, 3.700068358369865*^9}, {
  3.7000684489870443`*^9, 3.700068496597328*^9}, {3.700068528097978*^9, 
  3.700068543790595*^9}, {3.700068752969454*^9, 3.700068760139933*^9}, {
  3.700069002005844*^9, 3.700069007213793*^9}, {3.700075003303822*^9, 
  3.700075010379438*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<~/git/whitening/exp/data/natural_gradient_multilayer_fisher0.csv\>\"",
     ",", 
    RowBox[{"fisher", "[", "W0f", "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.700080087287698*^9, 3.7000800908425627`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<~/git/whitening/exp/data/natural_gradient_multilayer_fisher0.csv\>\"",
     ",", 
    RowBox[{"fisher", "[", "W0f", "]"}]}], "]"}], ";"}]], "Input"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 851},
WindowMargins->{{Automatic, 0}, {Automatic, 176}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 126, 1, 92, "Title"],
Cell[CellGroupData[{
Cell[731, 27, 89, 1, 64, "Section"],
Cell[823, 30, 11651, 322, 1608, "Input"],
Cell[CellGroupData[{
Cell[12499, 356, 7450, 195, 919, "Input"],
Cell[19952, 553, 22435, 380, 238, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42436, 939, 89, 1, 64, "Section"],
Cell[42528, 942, 19768, 533, 2068, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62333, 1480, 98, 1, 64, "Section"],
Cell[62434, 1483, 2754, 68, 306, "Input"],
Cell[CellGroupData[{
Cell[65213, 1555, 752, 17, 96, "Input"],
Cell[65968, 1574, 1951, 44, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67956, 1623, 234, 5, 32, "Input"],
Cell[68193, 1630, 593, 13, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68823, 1648, 367, 10, 32, "Input"],
Cell[69193, 1660, 4317, 88, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73547, 1753, 516, 14, 54, "Input"],
Cell[74066, 1769, 190, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74305, 1778, 108, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[74438, 1783, 8207, 222, 829, "Input"],
Cell[82648, 2007, 2281, 48, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84966, 2060, 549, 15, 54, "Input"],
Cell[85518, 2077, 54866, 990, 476, 22780, 463, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140421, 3072, 123, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[140569, 3077, 578, 18, 75, "Input"],
Cell[141150, 3097, 2240, 50, 250, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143439, 3153, 109, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[143573, 3158, 2214, 64, 201, "Input"],
Cell[145790, 3224, 1791, 41, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147618, 3270, 157, 3, 32, "Input"],
Cell[147778, 3275, 1739, 40, 244, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149578, 3322, 109, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[149712, 3327, 2465, 60, 327, "Input"],
Cell[152180, 3389, 1978, 44, 240, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154207, 3439, 105, 1, 64, "Section"],
Cell[154315, 3442, 1068, 26, 96, "Input"],
Cell[155386, 3470, 286, 7, 32, "Input"],
Cell[155675, 3479, 218, 6, 32, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

